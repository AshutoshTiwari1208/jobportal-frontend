{"version":3,"sources":["redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/persistReducers.js","utilities/configureAxios.js","middlewares/index.js","redux/store.js","redux/actions/auth.js","constants/APIS.js","components/Navbar.jsx","screens/Home.jsx","constants/Routes.js","screens/Signup.jsx","screens/Signin.jsx","redux/actions/jobs.js","components/JobsView.jsx","screens/CandidateHome.jsx","screens/AdminHome.jsx","components/CandidatesList.jsx","redux/actions/candidates.js","screens/CandidateList.jsx","components/RecruiterList.jsx","redux/actions/recruiters.js","screens/RecruiterList.jsx","screens/JobsList.jsx","screens/RecruiterHome.jsx","components/JobsByRecruiter.jsx","screens/PostedJobs.jsx","components/ApplicantList.jsx","screens/ApplicantsToJob.jsx","screens/ForgetPassword.jsx","screens/ResetPassword.jsx","screens/ForgetPassSteps.jsx","components/AppliedJobsList.jsx","screens/AppliedJobs.jsx","components/AuthenticationControl.jsx","screens/AdminSignin.jsx","Router.jsx","App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","auth","state","userdetails","action","console","log","type","payload","persistConfig","key","storage","configPersistReducer","persistReducer","openNotificationWithIcon","message","desc","notification","description","axiosInstance","axios","create","baseURL","timeout","interceptors","request","use","config","a","async","then","persistStore","default","store","getState","headers","Authorization","token","response","data","err","status","errors","code","Promise","reject","createLogger","configMiddlewares","thunk","withExtraArgument","configureStore","enhancers","compose","applyMiddleware","middlewares","createStore","persistor","signin","signinData","dispatch","post","userDetail","defaults","common","Title","Menu","SubMenu","Typography","Navbar","current","redirect","handleClick","e","to","preventDefault","props","signout","setState","this","text","history","style","display","flexDirection","justifyContent","alignItems","padding","level","onClick","React","Component","connect","SIGNIN","SIGNOUT","CANDIDATE_HOME","RECRUITER_HOME","AutoCompleteOption","AutoComplete","Option","SignupForm","confirmDirty","autoCompleteResult","handleSubmit","form","validateFieldsAndScroll","values","signup","role","push","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","getFieldDecorator","website","align","className","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","rules","required","title","hasFeedback","min","validator","Password","whitespace","Group","Button","offset","htmlType","signupData","Signup","Form","name","SigninForm","prefix","color","placeholder","Signin","availablejobs","meta","get","params","JobsView","list","isApplied","page","limit","total","applyToJob","jobUuid","applyForJob","updatedJobs","job","uuid","delJob","deleteJob","onChange","pagination","metadata","count","results","userData","allJobs","length","Fragment","item","job_title","job_description","disabled","pageSize","jobId","APPLY","replace","DEL_JOB","delete","CandidateHome","initLoading","loading","CandidateJobs","AdminHome","CardDeck","Card","Body","Text","CandidatesList","deleteCandidate","candidateUuid","candidateDelete","updatedCandidates","candidate","allCandidates","username","DEL_CANDI","candidateData","RecruiterList","allRecruiters","deleteRecruiter","recruiterUuid","recruiterDelete","updatedRecruiters","recruiter","DEL_RECRUITER","RecruiterHome","JobHome","TextArea","Input","postJob","rows","jobData","RecruiterPostJobs","PostedJobList","allJobsByRecruiter","jobs","linkto","PostedJobs","ApplicantList","getAppliedCandidates","JOB_ID","ApplicantsForJob","match","ForgetPassword","alert","forgetpassword","ForgetPass","ResetPassword","resetpassword","max","ResetPass","Step","Steps","ForgetPassSteps","handleResetRequest","next","catch","handleFinalResetRequest","success","steps","content","loa","marginLeft","prev","ForgetPassStep","emailPassed","resetData","AppliedJobsList","appliedjobslist","getStet","AppliedJobs","AuthenticationControl","authControl","isAuthenticated","handleAuth","location","pathname","startsWith","AdminSignin","class","SigninAdmin","Router","exact","path","component","App","CandidateList","configstore","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9369fdd9.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport authreducer from './auth';\n\nexport const reducers = combineReducers({\n    auth: authreducer\n})","export default function(state={\n    userdetails:{}   \n}, action){\n    console.log(action)\n    switch(action.type){\n\n        case \"SIGNIN_USER\" : return {\n            userdetails: action.payload,\n        }\n        case \"SIGNUP_USER\": return{\n            userdetails:action.payload,\n        }\n        case \"SIGNOUT\" : return {\n            userdetails:{}\n        }\n        default: \n            return state\n    }\n}","import { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducers } from './index';\n\nconst persistConfig = {\n    key: 'job_portal',\n    storage : storage\n}\n\nconst configPersistReducer = () => {\n    return  persistReducer(persistConfig, reducers);\n}\n\nexport default configPersistReducer();\n\n","import axios from 'axios';\nimport {notification} from 'antd';\n\nconst configureAxios = () => {\n    return axios.create({\n        baseURL: \"http://localhost:4000/api/v1\",\n        timeout: 30000\n    })\n}\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description: desc,\n    });\n  };\n\nexport const axiosInstance = configureAxios(); \n\n//interceptors for request\naxiosInstance.interceptors.request.use(async config => {\n    import('./../redux/store').then( (persistStore) => {\n        const { store } = persistStore.default;//??\n        let state = store.getState();//??getState\n        if(state.auth.userdetails){//which authuser\n            config.headers.Authorization = `Bearer ${state.auth.userdetails.token}`;\n        }\n    })\n    return await config;\n})\naxiosInstance.interceptors.response.use(response => {\n    return response.data\n}, err=>{\n    if(err.response.status==422){\n        openNotificationWithIcon('error',\"ERROR OCCURED\",err.response.data.errors);\n\n\n    }\n    else if(err.response.data.code==401){\n\n        openNotificationWithIcon('error',\"ERROR OCCURED\",err.response.data.errors);\n    }\n    else{\n        // alert(err.response.data.errors);\n        console.log(\"EEROORRR:::::\",err.response);\n        openNotificationWithIcon('error',\"ERROR OCCURED\",err.response.data.errors);\n\n    }\n    // else if(err.respone.status==401){\n    //     alert(err.response.data.errors);\n    // }\n       return Promise.reject(err) //what doing????\n\n})\n","import thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport {axiosInstance} from \"./../utilities/configureAxios\";\n\nconst logger = createLogger();\n//how thunk helping\nconst configMiddlewares = () => {\n    const middlewares = [\n        thunk.withExtraArgument({\n            axios: axiosInstance //why ?\n        })\n    ]\n\n    if (process.env.NODE_ENV === \"development\") {  //??\n        middlewares.push(logger); //arr?\n    }\n    \n    return middlewares;//arr return??\n}\n\nexport default configMiddlewares();","import reducers from './reducers/persistReducers';\nimport { compose, applyMiddleware, createStore} from 'redux';\nimport { persistStore } from 'redux-persist';\nimport middlewares from '../middlewares';\n\nconst configureStore = () => {\n\n    const enhancers = compose(applyMiddleware(...middlewares))\n    \n    const store = createStore(\n        reducers,\n        enhancers\n    )\n\n    const persistor =  persistStore(store);\n\n    return { store, persistor}\n}\n\nexport default configureStore();","import { USER_SIGNUP,USER_SIGNIN,FORGET_PASSWORD,RESET_PASSWORD } from './../../constants/APIS';\nimport { browserHistory } from 'react-router'\n\n// import { Signin } from '../../screens/Signin';\n\n\n// export const applyJob = (id) => (dispatch, getState, {axios}) => {//import?\n\n//     let endpoint = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(endpoint, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\n// export const login = (loginData) => (dispatch, getState, {axios}) => {\n\n//     let API = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(API, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\nexport const signup=(signupData) => (dispatch, getState, {axios}) =>{\n    return new axios.post(USER_SIGNUP, signupData).then(response=>{\n            let userDetail=response.data;\n         \n            dispatch({\n                type:\"SIGNUP_USER\",\n                payload:userDetail\n            });\n            // if(response.status===200){\n            //     console.log(\"######\",response.data.data);\n            // }\n            // console.log(\"##########\",reponse.data);\n            axios.defaults.headers.common['Authorization'] =`Bearer ${userDetail.token}`;\n\n            return response.data;\n    })\n}\nexport const signin=(signinData) =>(dispatch,getState,{axios})=>{\n    return new axios.post(USER_SIGNIN,signinData).then(response=>{\n        let userDetail=response.data;\n\n        dispatch({\n            type:\"SIGNIN_USER\",\n            payload:userDetail\n        });\n        axios.defaults.headers.common[\"Authorization\"]= `Bearer ${userDetail.token}`;\n        return response.data;\n    })\n}\n\nexport const forgetpassword=(emailPassed)=>(dispatch,getState,{axios})=>{\n    console.log(\"INSIDE ACTION:::::\",emailPassed,emailPassed.username);\n    return new axios.post(FORGET_PASSWORD,{ username: emailPassed.username} ).then(response=>{\n       console.log(\"WWWWWW RESPONSE:::\",response);\n        return response.data;\n    })\n}\n\nexport const resetpassword =(resetData) => (dispatch,getState,{axios})=>{\n    return new axios.post(RESET_PASSWORD,resetData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const signout=()=>(dispatch,getState,{axios}) =>{\n    dispatch({\n        type:\"SIGNOUT\",\n        payload:null\n    });\n    axios.defaults.headers.common[\"Authorization\"]=\"\";\n    return null;\n\n\n}","export const USER_LOGIN = '/signin';\nexport const USER_SIGNUP= '/signup';\nexport const APPLY_JOB = '/jobs/:jobId';\nexport const AVAILABLE_JOBS='/jobs';\nexport const USER_SIGNIN=\"/signin\";\nexport const ALL_CANDIDATES=\"/candidates\";\nexport const DELETE_A_CANDIDATE=\"/candidates/:candidateId\";\nexport const DELETE_A_RECRUITER=\"/recruiters/:recruiterId\";\nexport const ALL_RECRUITERS=\"/recruiters\";\nexport const DELETE_A_JOB=\"/jobs/:jobId\";\nexport const ALL_JOBS=\"/jobs\";\nexport const POST_JOB=\"/jobs\";\nexport const POSTED_JOBS=\"/jobs/posted\";\nexport const GET_CANDIDATE_BY_JOBID=\"/jobs/posted/:jobId\";\nexport const FORGET_PASSWORD=\"/forgetpassword\";\nexport const RESET_PASSWORD=\"/resetpassword\";\nexport const APPLIED_JOBS=\"/applications\";","import React, { Component } from 'react'\nimport { Menu, Icon,Typography, Layout } from 'antd';\nimport { Link } from 'react-router-dom'\nimport {signout} from \"../redux/actions/auth\";\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux'\n\nconst { SubMenu } = Menu;\n\nconst { Title } = Typography;\n\nclass Navbar extends React.Component {\n   \n  state = {\n    current: 'mail',\n    redirect:false\n  };\n\n\n  handleClick = (e,to) => {\n      if(to==\"/signout\"){\n      e.preventDefault();\n      this.props.signout();\n      this.setState({\n        redirect:true\n      })\n    }else{\n        return;\n    }\n  };\n\n\n\n  render() {\n    if (this.state.redirect) {\n        return <Redirect to='/signin'/>;\n      }\n    \n    const { text , to, history } = this.props;\n\n  \n    // if(to==\"signout\"){\n    //     console.log(to)\n    //     signout();\n    //     history.push(\"/signin\");\n    //     console.log(\"@#$@#@#2\");\n    // }\n\n\n\n    return (\n    //   <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n  \n    <Layout\n        style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '5px 10px'\n        }}\n       >\n\n            <Title level={2}key=\"mail\">\n            Job portal\n            </Title>\n            <Title level={4} key=\"mail\">\n            <Link onClick={(e) => this.handleClick(e,to)} to={to}>{text}</Link>\n            </Title>\n       </Layout>\n    )\n}\n\n}\n\nexport default connect(null, { signout })(Navbar);","import React, { Component } from 'react';\nimport Navbar from './../components/Navbar';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text=\"signin\" to=\"/signin\"/>   \n            </div>\n        )\n    }\n}\n","export const HOME ='/';\nexport const SIGNIN=\"/signin\";\nexport const SIGNUP=\"/signup\";\nexport const SIGNOUT=\"/signout\";\nexport const CANDIDATE_HOME = '/candidate/jobs';\nexport const CALL_CANDIDATE_BY_ADMIN = \"/admin\";\nexport const RECRUITER_HOME=\"/recruiter/jobs\";\nexport const ALL_CANDIDATES=\"/admin/candidates\";\nexport const ALL_RECRUITERS=\"/admin/recruiters\";\nexport const ALL_JOBS=\"/admin/jobs\";\nexport const AVAILABLE_JOBS=\"/candidate/jobs\";\nexport const VIEW_APPLIED_JOBS=\"/candidate/jobs/applications\";\nexport const ADMIN_DASHBOARD=\"/admin\";\nexport const ADMIN_SIGNIN=\"/adminsignin\";\nexport const RESET_PASSWORD=\"/resetpasswordsteps\";\n\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Button,\n    AutoComplete,\n    Icon,\n    Radio,\n  } from 'antd';\n  import Navbar from \"../components/Navbar\";\n  import { signup } from \"./../redux/actions/auth\"\n  import { connect } from 'react-redux'\n  import { CANDIDATE_HOME,RECRUITER_HOME,SIGNIN } from './../constants/Routes';\n\n  const AutoCompleteOption = AutoComplete.Option;\n  \n  class SignupForm extends React.Component {\n\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        console.log(values);\n        if (!err) {\n          // console.log('Received values of form: ', values);\n          this.props.signup(values).then((data)=>{\n              if(data.role==\"0\"){\n                  this.props.history.push(CANDIDATE_HOME);\n              }\n              else if(data.role==\"1\"){\n                this.props.history.push(RECRUITER_HOME);\n              }\n        \n          })\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    handleWebsiteChange = value => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({ autoCompleteResult });\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { autoCompleteResult } = this.state;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n   \n      const websiteOptions = autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      ));\n  \n      return (\n        <div >\n          \n        <Navbar text=\"Signin\" to=\"/signin\"/>\n        <h3 align=\"center\"><span  className=\"h2WrapperSignup\">SignUp for a New Account</span></h3>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"wrapperFormSignup\">\n\n          <Form.Item label=\"E-Mail\">\n            {getFieldDecorator('username', { //check\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item  label={\n              <span>\n                Password&nbsp;\n                <Tooltip title=\"Password must be minimum 6 character long \">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                    min:6,\n                    message:\"Password should be minimum of 6 character\"\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password />)}\n          </Form.Item>\n      \n          <Form.Item\n            label={\n              <span>\n                Name&nbsp;\n                <Tooltip title=\"Please write full name seperated with space - eg. Aman Kumar\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('name', {\n              rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Your Profile\">\n            {getFieldDecorator('role',{\n                rules:[{required: true,message: \"Please select your role!\"}]\n            })(\n                <Radio.Group>\n                <Radio.Button value=\"0\">I am a Candidate</Radio.Button>\n                <Radio.Button value=\"1\">I am a Recruiter</Radio.Button>\n                </Radio.Group>,\n            )}\n          </Form.Item>\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Signup \n            </Button>\n          </Form.Item>\n        </Form>\n       \n          \n       </div>\n            \n      );\n    }\n  }\n  \n\n  const mapStateToProps = ({auth}) => {\n    return ({\n      userdetails: auth.userdetails\n    })\n   }\n   \n\n\nSignupForm = connect(mapStateToProps, {signup})(SignupForm);\n\n\n\nexport const Signup = Form.create({ name: 'normal_signup' })(SignupForm);\n\n  ","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,notification } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin} from '../redux/actions/auth';\nimport { CANDIDATE_HOME,CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\nimport {SIGNUP,ADMIN_SIGNIN,SIGNIN,RESET_PASSWORD} from \"../constants/Routes\";\n\nconst openNotificationWithIcon = (type,message,desc) => {\n  notification[type]({\n    message: message,\n    description:desc,\n  });\n};\n\nclass SigninForm extends React.Component {\n\n  \n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n          console.log(\"###########\",response)\n\n          if(response.role==\"0\")\n           this.props.history.push(CANDIDATE_HOME);\n           if(response.role==\"2\"){\n            this.props.history.push(SIGNIN);\n              openNotificationWithIcon('error',\"ADMIN CAN'T GOT THROUGH THIS ROUTE\");\n           }\n            if(response.role==\"1\")\n            this.props.history.push(\"/recruiter\");      \n        })\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <Navbar text=\"Signup\" to={SIGNUP}/>\n      <div align=\"left\">\n             <Link to={ADMIN_SIGNIN}><span  className=\"links\"><u>Admin Signin Window</u></span></Link>\n          </div> \n          <h3 align=\"center\"><span  className=\"h2WrapperSignup\">SignIn to Existing Account</span></h3>\n\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' },\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n      \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          <br/>\n          \n            Forgot password ? <Link to={RESET_PASSWORD}>Click Here </Link>\n         \n         <br/>\n          OR <b><Link to={SIGNUP}>register now!</Link></b>\n        </Form.Item>\n      </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \nSigninForm = connect(mapStateToProps, {signin}) (SigninForm);\nexport const Signin = Form.create({ name: 'normal_signin' })(SigninForm);","import { AVAILABLE_JOBS, APPLY_JOB,DELETE_A_JOB,ALL_JOBS,POST_JOB,POSTED_JOBS,APPLIED_JOBS } from './../../constants/APIS';\n\nexport const availablejobs= (meta) => (dispatch,getState,{axios})=>{\n    console.log(meta)\n    return new axios.get(AVAILABLE_JOBS,{ params: meta} ).then(response=>{\n        return response.data;\n    })\n}\n\nexport const applyForJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let APPLY=APPLY_JOB.replace(\":jobId\", jobId);\n    return new axios.post(APPLY).then(response=>{\n        return response.data;\n    })\n}\n\nexport const deleteJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let DEL_JOB=DELETE_A_JOB.replace(\":jobId\",jobId);\n    return new axios.delete(DEL_JOB).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobs=()=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_JOBS).then(response=>{\n        return response.data;\n    }) \n}\n\nexport const postJob=(jobData)=>(dispatch,getState,{axios})=>{\n    return new axios.post(POST_JOB,jobData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobsByRecruiter=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(POSTED_JOBS,{params:meta}).then(response=>{\n        return response.data;\n    })\n}\n\n\nexport const appliedjobslist=(meta)=>(dispatch,getStet,{axios})=>{\n    return new axios.get(APPLIED_JOBS,{params:meta}).then(response=>{\n        return response.data;\n    })\n}","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nIcon} from 'antd';\nimport {applyForJob, availablejobs,deleteJob,allJobs} from \"../redux/actions/jobs\";\nimport { connect } from 'react-redux';\n\nclass JobsView extends Component {\n\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        total: 0\n    }\n\ncomponentDidMount() {\n    if(this.props.userData.auth.userdetails.role==\"0\"){\n       const pagination={\n            page: this.state.page,\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list:response.results\n            });\n        })\n    }else{\n\n        this.props.allJobs().then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list: response.results\n            })\n        });\n    }\n}\n\n\n    applyToJob=(e,jobUuid)=>{\n        \n        e.preventDefault();\n\n        let jobDetails= this.props.applyForJob(jobUuid).then(data=>{\n            const updatedJobs = this.state.list.map(job=>{\n                return job.uuid === jobUuid ? \n                {\n                  ...job, isApplied: true\n                } : \n                job\n            })\n            this.setState({\n                list: updatedJobs\n            })\n        });\n\n    }\n\n    delJob=(e,jobUuid)=>{\n        e.preventDefault();\n        let jobDetails=this.props.deleteJob(jobUuid).then(data=>{\n            const updatedJobs=this.state.list.map(job=>{\n                return job.uuid===jobUuid ?\n                {\n                    ...job, isApplied:true\n                }:\n                job\n            })\n            this.setState({\n                list:updatedJobs\n            })\n        })\n    }\n\n    //PAGINATE HERE.....\n    onChange = page => {\n        const pagination={\n            page: page,\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list:response.results\n            });\n        })\n      };\n\n    \n    render() {\n        const { list } = this.state\n        if(list.length<1){\n            return(\n                <h2><center>No Jobs Published So far...</center></h2>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF JOBS</h2>\n                {\n                this.props.userData.auth.userdetails.role==\"0\" ? (\n                    list.map(item=>{\n                        return (\n                            <div className=\"cards\">\n                             <Card title={item.job_title}><p>{item.job_description}</p>\n                             <Button type=\"primary\" onClick={(e) => this.applyToJob(e,item.uuid)} disabled={item.isApplied}>Apply</Button>\n                             </Card>\n                            </div>\n                          ) \n                })) : \n                list.map(item=>{\n                    return (\n                        <div className=\"cards\">\n                            <Card title={item.job_title}>\n                            <p>{item.job_description}</p>\n                             <Button type=\"danger\" onClick={(e) => this.delJob(e,item.uuid)} disabled={item.isApplied}>Delete</Button>\n                             </Card>\n                      </div>\n                    ) \n                })\n                }\n            <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n            </React.Fragment>  \n        )}\n}\n        \nconst mapStateToProps=(store)=>{\n   return({\n       userData:store\n   })\n}  \n\n\n\nexport default connect(mapStateToProps, {applyForJob, availablejobs, allJobs, deleteJob}) (JobsView);//take then send\n\n","import React, { Component } from 'react'\nimport {\n  Form,\n} from 'antd';\n\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {availablejobs} from \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport JobsView from '../components/JobsView'\nimport {SIGNOUT,VIEW_APPLIED_JOBS} from \"../constants/Routes\";\n\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n    current:1\n  };\n\n\n  onChange = page => {\n    console.log(page);\n    this.setState({\n      current: page,\n\n    });\n  };\n\n  render() {\n\n    const { availablejobs } = this.props; \n    return (\n      <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          <div align=\"left\">\n             <Link to={VIEW_APPLIED_JOBS}><span  className=\"links\"><u>View Applied Jobs</u></span></Link>\n          </div> \n          <div className=\"listCards\" >\n            <JobsView  availablejobs={availablejobs}/>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{ \n  return{\n    userData:state\n  }\n}\n\n\nCandidateHome=connect(mapStateToProps,{availablejobs})(CandidateHome);\nexport const CandidateJobs = Form.create({ name: 'candidateJobs' })(CandidateHome);\n\n","import React, { Component } from 'react';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport { Card, CardDeck,  } from 'react-bootstrap';\nimport {ALL_CANDIDATES,ALL_RECRUITERS,ALL_JOBS,SIGNOUT} from \"../constants/Routes\";\n\nexport default class AdminHome extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <CardDeck>\n  <Card>\n    <Card.Body><Link to={ALL_CANDIDATES}>\n      <Card.Title>Candidates</Card.Title></Link>\n      <Card.Text>\n         All candidates with their email and Id's are listed. Manage Candidates here.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n  <Card>\n    <Card.Body><Link to={ALL_RECRUITERS}>\n      <Card.Title>Recruiters</Card.Title></Link>\n      <Card.Text>\n         All Recruiters with their email and Id's are listed. Manage Recruiters here.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n  <Card>\n    <Card.Body><Link to={ALL_JOBS}>\n      <Card.Title>Jobs Available</Card.Title></Link>\n      <Card.Text>\n        Here you can manage the jobs posted by Recruiters. Click on Jobs above to view.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n</CardDeck>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination} from 'antd';\nimport { connect } from 'react-redux';\nimport {candidateDelete} from '../redux/actions/candidates';\nimport {allCandidates} from \"../redux/actions/candidates\";\n\n\nclass CandidatesList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n\n    this.props.allCandidates(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        list: response.results,\n        total:response.metadata.count,\n        list:response.results\n        })\n    })\n}\n\n\ndeleteCandidate=(e,candidateUuid)=>{\n        \n        e.preventDefault();\n\n        let candidateDetail= this.props.candidateDelete(candidateUuid).then(data=>{\n            const updatedCandidates = this.state.list.map(candidate=>{\n                return candidate.uuid === candidateUuid ? \n                {\n                    ...candidate, isApplied: true\n                } : \n                candidate\n            })\n            this.setState({\n                list: updatedCandidates\n            })\n        });\n    }\n\n     \n \nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allCandidates(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.results\n        });\n    })\n  };\n   \n\n\n    render() {\n        const { list } = this.state\n        if(list.length<1){\n            return(\n                <h2><center>No candidates to Show currently...</center></h2>\n            )\n        }\n        return (\n            \n            <React.Fragment>\n                <h2 align=\"center\">LIST OF CANDIDATES</h2>\n\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.username}><p>Name:{candidate.name}<br/>ID:{candidate.uuid}</p>\n                     <Button type=\"danger\" onClick={(e) =>  this.deleteCandidate(e,candidate.uuid)} disabled={candidate.isApplied}>Delete</Button>\n                     </Card>\n              </div>\n                ) \n                })\n            }\n            <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default connect(null, {candidateDelete, allCandidates}) (CandidatesList);//take then send\n\n","import { ALL_CANDIDATES,DELETE_A_CANDIDATE,GET_CANDIDATE_BY_JOBID } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allCandidates=(meta) => (dispatch,getState,{axios})=>{\n    return new axios.get(ALL_CANDIDATES,{params:meta}).then(response=>{\n        console.log(\"$$$$$$$$$$\",response.data);\n        return response.data;\n    })\n}\n\nexport const candidateDelete=(candidateUuid)=> (dispatch,getState,{axios})=>{\n    let DEL_CANDI=DELETE_A_CANDIDATE.replace(\":candidateId\", candidateUuid);\n\n    return new axios.delete(DEL_CANDI).then(response=>{\n        console.log(\"@@@@@@@@\",response.data);\n        return response.data;\n    })\n}\n\n\nexport const getAppliedCandidates=(jobId,meta)=>(dispatch,getState,{axios})=>{\n    let JOB_ID=GET_CANDIDATE_BY_JOBID.replace(\":jobId\",jobId);\n\n    return new axios.get(JOB_ID,{ params: meta}).then(response=>{\n        return response.data;\n    })\n}","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport CandidateList from '../components/CandidatesList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  render() {\n\n    const { allCandidates } = this.props; \n    return (\n    <div>\n        <div>\n            <Navbar text=\"Logout\" to={SIGNOUT}/>\n        </div>\n        <div align=\"left\" className=\"linksDivLeft\">\n            <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n        </div> \n        <div className=\"listCards\">\n      <CandidateList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(CandidateHome);","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {recruiterDelete,allRecruiters} from \"../redux/actions/recruiters\";\n\n\nclass RecruiterList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        this.setState({//check what coming inside list\n              list:response.results,\n              total:response.metadata.count,\n              list:response.results\n        })\n    })\n}\n   \nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.results\n        });\n    })\n  };\n\n\ndeleteRecruiter=(e,recruiterUuid)=>{//uuid kahan se ayegi jispe click hoga\n    e.preventDefault();\n    let recruiterDetails=this.props.recruiterDelete(recruiterUuid).then(data=>{\n        const updatedRecruiters = this.state.list.map(recruiter=>{\n            return recruiter.uuid===recruiterUuid ?\n            {\n                ...recruiter,isApplied:true //only isApplied replace rest same.\n            }:\n            recruiter\n        });\n        this.setState({\n            list:updatedRecruiters\n        })\n    })\n}\n\n\n    render(){\n        const {list}=this.state //got list form inside current state\n        if(list.length<1){\n            return(\n                <h2><center>No Recruiters present...</center></h2>\n            )\n        }\n        return(\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF RECRUITERS</h2>\n            {\n            list.map(recruiter=>{\n                return(\n                    <div className=\"cards\">\n                    <Card title={recruiter.username}><p>{recruiter.name}<br/>ID:{recruiter.uuid}</p>\n                    <Button type=\"danger\" onClick={(e) => this.deleteRecruiter(e,recruiter.uuid)} disabled={recruiter.isApplied}>Delete</Button>\n                    </Card>           \n                 </div>\n                )\n\n            })\n        }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n    }  \n}\n\n\nexport default connect(null,{allRecruiters,recruiterDelete})(RecruiterList);\n\n","import { ALL_RECRUITERS,DELETE_A_RECRUITER } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allRecruiters=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_RECRUITERS,{params:meta}).then(response=>{\n        console.log(\"$$$$$$ALLRECRUITERS::\",response.data);\n        return response.data;\n    })\n}\n\nexport const recruiterDelete=(recruiterUuid)=>(dispatch,getState,{axios})=>{\n    let DEL_RECRUITER=DELETE_A_RECRUITER.replace(\":recruiterId\",recruiterUuid);\n   \n    return axios.delete(DEL_RECRUITER).then(response=>{\n        console.log(\"$$$$$$$$AFTER REC DELETE DATA\",response.data);\n        return response.data;\n    })\n}\n\n\n\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport RecruiterList from '../components/RecruiterList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\n class RecruiterHome extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <div>\n                  <Navbar text=\"Logout\" to={SIGNOUT}/>\n                </div>\n                <div align=\"left\" className=\"linksDivLeft\">\n                  <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                  <RecruiterList />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(RecruiterHome);\n\n\n\n","import React, { Component } from \"react\";\nimport Navbar from \"./../components/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport JobsList from \"../components/JobsView\";\nimport {SIGNOUT,ADMIN_DASHBOARD} from \"../constants/Routes\";\n\nclass JobHome extends Component {\n\tstate = {\n\t\tinitLoading: false,\n\t\tloading: false,\n\t\tdata: []\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar text=\"Logout\" to={SIGNOUT}/>\n\t\t\t\t</div>\n\t\t\t\t<div align=\"left\" className=\"linksDivLeft\">\n\t\t\t\t\t<Link to={ADMIN_DASHBOARD}>\n\t\t\t\t\t\t<span className=\"links\">\n\t\t\t\t\t\t\t<u>Dashboard</u>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</div >\n                <div className=\"listCards\">\n                    <JobsList />\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tcandidateData: state\n\t};\n};\n\nexport default connect(mapStateToProps)(JobHome);\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\nimport { \n  Form,\n    Input,\n    Button,\n    Icon,\n   } from 'antd';\nimport {postJob} from  \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router';\n\nconst { TextArea } = Input;\n\nclass RecruiterHome extends React.Component {\n  state={\n    redirect:false\n  }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n              this.props.postJob(values).then(response=>{\n                this.setState({\n                  redirect:true\n                })\n                  // alert(\"Job is posted Successfully\");\n                  console.log(\"$$$JOB POSTED$$$ :: \",response);\n              });\n          }\n        });\n      };\n    \n      render() {\n        if (this.state.redirect) {\n          return <Redirect to='/recruiter/jobs'/>;\n        }\n        const { getFieldDecorator } = this.props.form;\n        return (\n          <div>\n          <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          </div>\n          <div align=\"left\">\n            <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Your Published Jobs!</u></span></Link>\n          </div> \n          <div className=\"wrapperForm\">\n          <Form  onSubmit={this.handleSubmit} className=\"login-form\">\n            <h2><strong>Publish New Job</strong></h2>\n            <Form.Item>\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please mention title of Job!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"tag\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Job Title\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('description', {\n                rules: [{ required: true, message: 'Please mention description of job!' }],\n              })(\n                <TextArea rows={4}\n                  prefix={<Icon type=\"form\" style={{ color: 'rgba(0,0,0,.25)' }}\n                  rows={4} />}\n                  \n                  placeholder=\"Job Description\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Publish Job\n              </Button>\n            </Form.Item>\n          </Form>\n          </div>\n          </div>\n        );\n      }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    userData:state\n  }\n}\n\n\nRecruiterHome=connect(mapStateToProps,{postJob})(RecruiterHome);\n\nexport const RecruiterPostJobs = Form.create({ name: 'candidateJobs' })(RecruiterHome);\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {allJobsByRecruiter} from \"../redux/actions/jobs\";\nimport { Link } from 'react-router-dom'\n\n\n\n\n\n\nclass PostedJobList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        this.setState({//check what coming inside list\n            list:response.results,\n            total:response.count,\n            list:response.results\n        })\n    })\n}\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.results\n        });\n    })\n  };\n   \n\n\n\n    render(){\n        const {list}=this.state //got list form inside current state\n        if(list.length<1){\n            return(\n                <h2><center>No Jobs Published!</center></h2>\n            )\n        }\n        return(\n            <React.Fragment>\n            {\n            list.map(jobs=>{\n                let linkto=\"/recruiter/jobs/\"+jobs.uuid;\n                return(\n\n                    <div className=\"cards\">\n                    <Card title={jobs.job_title}><p>{jobs.job_description}<br/>ID:{jobs.uuid}</p>\n                    <Link to={linkto}>View Applications</Link>\n                    </Card>\n              </div>\n                )\n\n            })\n            }\n            <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        )\n    }  \n}\n\n\n\nexport default connect(null,{allJobsByRecruiter})(PostedJobList);\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport PostedJobList from \"../components/JobsByRecruiter\"\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\n\n class PostedJobs extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to=\"/signout\"/>\n                <div align=\"left\">\n                    <Link to=\"/recruiter\"><span  className=\"links\"><u>Post a Job !!</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                    <PostedJobList />\n                </div>     \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(PostedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination} from 'antd';\nimport { connect } from 'react-redux';\nimport {getAppliedCandidates} from \"../redux/actions/candidates\";\n\n\nclass ApplicantList extends Component {\n\n    state = {\n        list: [],\n        page:1,\n        limit:6,\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        \n        this.setState({//set state will render the view again..\n        list: response.results,\n        total:response.metadata.count,\n        list:response.results\n        })\n    })\n}\n\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.results\n        });\n    })\n  };\n\n    \n    render() {\n        const { list } = this.state\n        if(list.length<1){\n            return(\n                <h2><center>No Applications Received</center></h2>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.username}>Name:{candidate.name}<br/>ID :{candidate.uuid}</Card>\n                   </div>\n                ) \n                })\n            }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return ({\n        userData:state\n    })\n}\n\nexport default connect(mapStateToProps, {getAppliedCandidates}) (ApplicantList);//take then send\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport ApplicantsList from \"../components/ApplicantList.jsx\";\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\n\n\n class ApplicantsForJob extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <div align=\"left\" className=\"linksDivLeft\">\n                    <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Published Jobs</u></span></Link>\n                </div> \n                <div align=\"right\" className=\"linksDivRight\">\n                    <Link to=\"/recruiter\"><span  className=\"linksRight\"><u>Post New Job</u></span></Link>\n                </div> \n                  <ApplicantsList jobId={this.props.match.params.jobId}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(ApplicantsForJob);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { CANDIDATE_HOME,CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\n\n\nclass ForgetPassword extends React.Component {\n  handleSubmit = e => {\n    \n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n          this.props.forgetpassword(values);\n      }else{\n          console.log(\"ERROR OCCUREDD::::\",err);\n          const temp=\"ERROR OCCURED\"+err;\n          alert(temp);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'E-Mail is needed to Reset password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n      \n        <Form.Item>\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ForgetPass = Form.create({ name: 'normal_signin' })(ForgetPassword);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,Tooltip,InputNumber, Checkbox } from 'antd';\nimport { connect } from 'react-redux'\nimport {resetpassword} from '../redux/actions/auth';\n\nclass ResetPassword extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) { \n        console.log(\"VALUE =GONE TO RESETPASS STEPS VALUE-->\",values);\n        this.props.resetpassword(values);    \n\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item label={\n              <span>\n                Your E-mail\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item  label={\n              <span>\n                New Password&nbsp;\n                <Tooltip title=\"Password must be minimum 6 character long \">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                    min:6,\n                    message:\"Password should be minimum of 6 character\"\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password />)}\n          </Form.Item>\n        <Form.Item  label={\n              <span>\n                OTP&nbsp;\n                <Tooltip title=\"OTP has been shared to your account\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('otp', {\n            rules: [{ required: true, message: 'OTP will be 6 digit code sent to your account' },\n                {\n                    min:6,\n                    message:\"OTP too short\"\n                },\n                {\n                    max:6,\n                    message:\"OTP too long\"\n                }\n        ],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"otp\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ResetPass=Form.create({name:\"reset_form\"})(ResetPassword);","import React, { Component } from 'react'\n\nimport { Steps, Button, message, notification, Spin } from 'antd';\nimport  {ForgetPass as ForgetPassword} from './ForgetPassword';\nimport {forgetpassword} from '../redux/actions/auth';\nimport { connect } from 'react-redux'\nimport {ResetPass} from './ResetPassword';\nimport {resetpassword} from '../redux/actions/auth';\nimport Navbar from \"../components/Navbar\";\nimport {SIGNUP} from \"../constants/Routes\";\n\n\nconst { Step } = Steps;\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n      message: message,\n      description:desc,\n    });\n  };\n\nclass ForgetPassSteps extends React.Component {\n  \n  state = {\n    current: 0,\n    loading: false\n  }\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current, loading: false });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current, loading: false });\n  }\n\n    handleResetRequest = (values) => {\n      this.setState({\n          loading: true\n      })\n      this.props.forgetpassword(values).then(response=>{\n          this.next();\n      }).catch(err=>{\n        openNotificationWithIcon('error',\"Check Email\",\"E-Mail you entered doesn't exists!\")\n        this.setState({\n            loading : false\n        })\n        console.log(\"XXXXX ERRROR IN FORGOT PASS-->\",err.response);\n      })\n  }\n\n  handleFinalResetRequest =(values)=>{\n      this.props.resetpassword(values).then(response=>{\n          message.success('XXXXX Password Changed Successfully')\n          console.log(\"SUUCESSFULLY RESET RESPONSE ->\",response);\n      }).catch(err=>{\n            openNotificationWithIcon('error',err.response.data.errors[0].message);\n          \n      })\n  }\n\n  steps = [\n    {\n      title: 'ForgotPassword',\n      content: <ForgetPassword loading={this.state.loa} forgetpassword={this.handleResetRequest}/>,\n    },\n    {\n      title: 'ResetPassword',\n      content: <ResetPass resetpassword={this.handleFinalResetRequest} />,\n    },\n  ];\n\n  render() {\n    const { current, loading } = this.state;\n    return (\n        <div>\n         <Navbar text=\"Signup\" to={SIGNUP}/>\n\n      <div className=\"wrapperForgetPass\">\n        <Steps current={current}>\n          {this.steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps> \n\n        <div className=\"steps-content\">{loading ? <span className=\"spin\"><Spin /></span> : this.steps[current].content}</div>\n        <div className=\"steps-action\" align=\"right\">\n          {current < this.steps.length - 1 && (\n          <Button type=\"default\" onClick={() => this.next()}>\n            Aready Have An OTP?\n            </Button>\n          )}\n\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n              Send OTP AGAIN\n            </Button>\n          )}\n        </div>\n      </div>\n      </div>\n\n    );\n  }\n}\nexport const ForgetPassStep=connect(null ,{\n    forgetpassword,resetpassword\n})(ForgetPassSteps);","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\n\n\nclass AppliedJobsList extends Component {\n\n    state = {\n        list: [],\n         page:1,\n        limit:6,\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        list: response.results,\n        total:response.metadata.count,\n        list:response.results\n        })\n    })\n}\n\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.results\n        });\n    })\n  };\n\n\n\n\n        \n\n    render() {\n        const { list } = this.state\n        if(list.length<1){\n            return(\n                <h2><center>You have not applied to any Job !!</center></h2>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n\n            list.map(jobs=>{\n              return (\n                <div className=\"cards\">\n                <Card title={jobs.job_title}>{jobs.job_description}<br/>ID :{jobs.uuid}</Card>\n               </div>\n              ) \n            })\n        }\n        <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default connect(null, {appliedjobslist}) (AppliedJobsList);//take then send\n\n","import React, { Component } from 'react'\n\nimport {connect} from \"react-redux\";\nimport AppliedJobsList from '../components/AppliedJobsList';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT,AVAILABLE_JOBS} from \"../constants/Routes\";\n\nclass AppliedJobs extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  \n  render() {\n\n    const { allCandidates } = this.props; //took out function and passed\n    return (\n    <div>\n      <div>\n        <Navbar text=\"Logout\" to={SIGNOUT}/>\n     </div>\n     <div align=\"left\">\n        <Link to={AVAILABLE_JOBS}><span  className=\"links\"><u>View Available Jobs</u></span></Link>\n    </div > \n    <div className=\"listCards\">\n      <AppliedJobsList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(AppliedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nnotification} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\n\nexport function AuthenticationControl (Component){\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description:desc,\n    });\n    };\n    \n    \n\n    class authControl extends React.Component{\n\n        componentDidMount() {\n            this.handleAuth();\n        }\n        state={\n            isAuthenticated:true\n        }\n\n        handleAuth = () => {\n                const {history}=this.props;\n                const {role}=this.props.userData.auth.userdetails;\n                if(this.props.location.pathname.startsWith(\"/admin\")&&(role != \"2\")){\n                    console.log(\"ROle\",this.props.location.pathname.startsWith(\"/admin\"));\n                    history.push(\"/adminsignin\");\n                    console.log(this.props.location)\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/candidate\")&& role!==\"0\"){\n                    history.push(\"/signin\");\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/recruiter\")&& role!==\"1\"){\n                    history.push(\"/signin\");\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n\n                }\n            }\n            // role= 0, /admin <Login> : path\n\n\n\n        render(){\n           return(\n           <div>\n           \n            { \n            this.state.isAuthenticated==true ?\n                <Component {...this.props}/> //which props?\n                : null  //render nothing\n            }\n\n            </div>\n           )\n        }\n\n    }\n    const mapStateToProps=(store)=>{\n        return({\n            userData:store\n        })\n    }\n    \n    return connect(mapStateToProps,{})(authControl);\n}\n\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin} from '../redux/actions/auth';\nimport { CANDIDATE_HOME,CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\n\n\nclass AdminSignin extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n         \n          console.log(\"#######ADMIN LOGIN####\",response)\n           if(response.role==\"2\")\n            this.props.history.push(\"/admin\");\n        \n              \n            //  this.props.history.push(RECRUITER_HOME);\n          //  else\n          //  this.props.history.push(ADMIN_HOME);\n        })\n        \n\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <Navbar text=\"Not An Admin?\" to=\"/signin\"/>\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n          <h2><span class=\"adminh2\">ADMIN</span> SIGNIN WINDOW</h2>\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {/* {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)} */}\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          \n        </Form.Item>\n      </Form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \n\n\n AdminSignin = connect(mapStateToProps, {signin}) (AdminSignin);//take then send\nexport const SigninAdmin = Form.create({ name: 'normal_signin' })(AdminSignin);\n\n// ReactDOM.render(<Signin />, mountNode);\n","import React, { Component } from 'react'\nimport { BrowserRouter as AppRouter, Route } from 'react-router-dom';\nimport Home from './screens/Home';\nimport App from './App';\nimport { Signup } from './screens/Signup';\nimport { Signin } from './screens/Signin';\nimport {CandidateJobs}  from './screens/CandidateHome'\nimport AdminHome from './screens/AdminHome'\nimport CandidateList from './screens/CandidateList'\nimport RecruiterList from \"./screens/RecruiterList\"\nimport JobHome from \"./screens/JobsList\"\nimport {RecruiterPostJobs} from \"./screens/RecruiterHome\";\nimport PostedJobs from \"./screens/PostedJobs\";\nimport ApplicantsForJob from \"./screens/ApplicantsToJob\"\nimport {ForgetPass} from \"./screens/ForgetPassword\";\nimport {ResetPass} from \"./screens/ResetPassword\";\nimport {ForgetPassStep} from \"./screens/ForgetPassSteps\";\nimport AppliedJobs from \"./screens/AppliedJobs\";\nimport {AuthenticationControl} from \"./components/AuthenticationControl\";\nimport {SigninAdmin} from \"./screens/AdminSignin\";\nexport const Router = () => (\n    <AppRouter>\n        <Route exact path=\"/\"           component={Signin} />\n        <Route path=\"/signup\"           component={Signup} />\n        <Route path=\"/signin\"           component={Signin} />\n        <Route path=\"/dashboard\"        component={App} />\n        <Route exact  path =\"/candidate/jobs\" component={AuthenticationControl(CandidateJobs)}/>\n        <Route path =\"/admin/candidates/\"   component={AuthenticationControl(CandidateList)} />\n        <Route path =\"/admin/recruiters/\"   component={AuthenticationControl(RecruiterList)} />\n        <Route path=\"/admin/jobs\" component={AuthenticationControl(JobHome)} />\n        <Route exact path='/admin' component={AuthenticationControl(AdminHome)} />\n        <Route exact path =\"/recruiter\" component={AuthenticationControl(RecruiterPostJobs)}  />\n        <Route exact path=\"/recruiter/jobs\" component={AuthenticationControl(PostedJobs)} />\n        <Route  path=\"/recruiter/jobs/:jobId\" component={AuthenticationControl(ApplicantsForJob)} />\n        <Route path=\"/forgetpassword\" component={ForgetPass} />\n        <Route path=\"/resetpassword\" component={ResetPass} />\n        <Route path=\"/resetpasswordsteps\" component={ForgetPassStep} />\n        <Route path=\"/candidate/jobs/applications\" component={AuthenticationControl(AppliedJobs)} />\n        <Route path=\"/adminsignin\" component={SigninAdmin}/>\n\n    </AppRouter>\n)","import React from 'react';\nimport './App.css';\nimport { Router } from './Router';\nimport { Provider } from 'react-redux';\nimport configstore from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { store, persistor } = configstore;\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router />\n      </PersistGate>  \n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n// import { Router }  from './Router';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}