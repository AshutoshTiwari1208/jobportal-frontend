{"version":3,"sources":["redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/persistReducers.js","utilities/configureAxios.js","middlewares/index.js","redux/store.js","redux/actions/auth.js","constants/APIS.js","components/Navbar.jsx","constants/Routes.js","screens/Signup.jsx","screens/Signin.jsx","redux/actions/jobs.js","components/JobsView.jsx","screens/CandidateHome.jsx","screens/AdminHome.jsx","components/CandidatesList.jsx","redux/actions/candidates.js","screens/CandidateList.jsx","components/RecruiterList.jsx","redux/actions/recruiters.js","screens/RecruiterList.jsx","screens/JobsList.jsx","screens/RecruiterHome.jsx","components/JobsByRecruiter.jsx","screens/PostedJobs.jsx","components/ApplicantList.jsx","screens/ApplicantsToJob.jsx","screens/ForgetPassword.jsx","screens/ResetPassword.jsx","screens/ForgetPassSteps.jsx","components/AppliedJobsList.jsx","screens/AppliedJobs.jsx","components/AuthenticationControl.jsx","screens/AdminSignin.jsx","components/NoMatch.jsx","Router.jsx","App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","auth","state","userdetails","action","type","payload","persistConfig","key","storage","configPersistReducer","persistReducer","openNotificationWithIcon","message","desc","notification","description","axiosInstance","axios","create","baseURL","timeout","interceptors","request","use","config","a","async","then","persistStore","default","store","getState","headers","Authorization","token","response","data","err","saveError","errors","console","log","status","code","isNaN","Promise","reject","createLogger","configMiddlewares","thunk","withExtraArgument","configureStore","enhancers","compose","applyMiddleware","middlewares","createStore","persistor","signin","signinData","dispatch","post","userDetail","defaults","common","signout","Title","Menu","SubMenu","Typography","Navbar","current","redirect","path","handleClick","e","to","preventDefault","props","setState","this","text","history","userData","role","style","display","flexDirection","justifyContent","alignItems","padding","level","onClick","React","Component","connect","HOME","SIGNIN","SIGNOUT","RECRUITER_HOME","AVAILABLE_JOBS","RECRUITER","AutoCompleteOption","AutoComplete","Option","SignupForm","confirmDirty","autoCompleteResult","nameFieldText","isVisible","handleSubmit","form","validateFieldsAndScroll","values","signup","push","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","recruiterClicked","candidateClicked","getFieldDecorator","website","align","className","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","rules","required","Group","Button","title","whitespace","hasFeedback","validator","min","Password","onBlur","offset","htmlType","signupData","Signup","Form","name","SigninForm","undefined","prefix","color","placeholder","Signin","availablejobs","meta","get","params","JobsView","list","isApplied","page","limit","total","loading","textPop","applyToJob","jobUuid","applyForJob","updatedJobs","job","id","delJob","isDisabled","deleteJob","onChange","pagination","metadata","count","allJobs","length","Fragment","item","job_title","job_description","companyname","placement","disabled","onConfirm","okText","cancelText","pageSize","jobId","APPLY","replace","DEL_JOB","delete","CandidateHome","initLoading","CandidateJobs","AdminHome","background","gutter","bordered","CandidatesList","deleteCandidate","candidateUuid","candidateDelete","updatedCandidates","candidate","allCandidates","email","DEL_CANDI","candidateData","RecruiterList","allRecruiters","deleteRecruiter","recruiterUuid","recruiterDelete","updatedRecruiters","recruiter","DEL_RECRUITER","RecruiterHome","JobHome","TextArea","Input","postJob","initialValue","companyName","defaultValue","rows","jobData","RecruiterPostJobs","PostedJobList","allJobsByRecruiter","jobs","linkto","PostedJobs","ApplicantList","getAppliedCandidates","JOB_ID","ApplicantsForJob","match","ForgetPassword","forgetpassword","ForgetPass","ResetPassword","confirm","resetpassword","max","ResetPass","Step","Steps","ForgetPassSteps","handleResetRequest","next","catch","handleFinalResetRequest","success","steps","content","marginLeft","prev","ForgetPassStep","emailPassed","resetData","AppliedJobsList","appliedjobslist","getStet","AppliedJobs","AuthenticationControl","authControl","isAuthenticated","handleAuth","location","pathname","startsWith","AdminSignin","class","SigninAdmin","NoMatch","Router","exact","component","App","CandidateList","configstore","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a46a99c.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport authreducer from './auth';\n\nexport const reducers = combineReducers({\n    auth: authreducer\n})","export default function(state={\n    userdetails:{}   \n}, action){\n    switch(action.type){\n\n        case \"SIGNIN_USER\" : return {\n            userdetails: action.payload,\n        }\n        case \"SIGNUP_USER\": return{\n            userdetails:action.payload,\n        }\n        case \"SIGNOUT\" : return {\n            userdetails:{}\n        }\n        default: \n            return state\n    }\n}","import { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducers } from './index';\n\nconst persistConfig = {\n    key: 'job_portal',\n    storage : storage\n}\n\nconst configPersistReducer = () => {\n    return  persistReducer(persistConfig, reducers);\n}\n\nexport default configPersistReducer();\n\n","import axios from 'axios';\nimport {notification} from 'antd';\n\nconst configureAxios = () => {\n    return axios.create({\n        baseURL: \"http://localhost:4000/api/v1\",\n        timeout: 30000\n    })\n}\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description: desc,\n    });\n  };\n  \nexport const axiosInstance = configureAxios(); \n\n//interceptors for request\naxiosInstance.interceptors.request.use(async config => {\n    import('./../redux/store').then( (persistStore) => {\n        const { store } = persistStore.default;//??\n        let state = store.getState();//??getState\n        if(state.auth.userdetails){//which authuser\n            config.headers.Authorization = `Bearer ${state.auth.userdetails.token}`;\n        }\n    })\n    return await config;\n})\naxiosInstance.interceptors.response.use(response => {\n    return response.data\n}, err=>{\n    const saveError=err.response.data.errors;\n\n    console.log(\"ERROR HANDLED:\",err.response);\n    if(err.response.status==422){\n        openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n\n\n    }\n    else if(err.response.data.code==401){\n\n        openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n    }\n    else{\n        if(isNaN(saveError[0])){\n            openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n        }else{\n            console.log(saveError)\n            openNotificationWithIcon('error',\"ERROR OCCURED\",saveError[0].message);\n        }\n\n    }\n   \n       return Promise.reject(err) //what doing????\n\n})\n","import thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport {axiosInstance} from \"./../utilities/configureAxios\";\n\nconst logger = createLogger();\n//how thunk helping\nconst configMiddlewares = () => {\n    const middlewares = [\n        thunk.withExtraArgument({\n            axios: axiosInstance //why ?\n        })\n    ]\n\n    if (process.env.NODE_ENV === \"development\") {  //??\n        middlewares.push(logger); //arr?\n    }\n    \n    return middlewares;//arr return??\n}\n\nexport default configMiddlewares();","import reducers from './reducers/persistReducers';\nimport { compose, applyMiddleware, createStore} from 'redux';\nimport { persistStore } from 'redux-persist';\nimport middlewares from '../middlewares';\n\nconst configureStore = () => {\n\n    const enhancers = compose(applyMiddleware(...middlewares))\n    \n    const store = createStore(\n        reducers,\n        enhancers\n    )\n\n    const persistor =  persistStore(store);\n\n    return { store, persistor}\n}\n\nexport default configureStore();","import { USER_SIGNUP,USER_SIGNIN,FORGET_PASSWORD,RESET_PASSWORD } from './../../constants/APIS';\nimport { browserHistory } from 'react-router'\n\n// import { Signin } from '../../screens/Signin';\n\n\n// export const applyJob = (id) => (dispatch, getState, {axios}) => {//import?\n\n//     let endpoint = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(endpoint, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\n// export const login = (loginData) => (dispatch, getState, {axios}) => {\n\n//     let API = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(API, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\nexport const signup=(signupData) => (dispatch, getState, {axios}) =>{\n    return new axios.post(USER_SIGNUP, signupData).then(response=>{\n            let userDetail=response.data;\n            dispatch({\n                type:\"SIGNUP_USER\",\n                payload:userDetail\n            });\n            // if(response.status===200){\n            //     console.log(\"######\",response.data.data);\n            // }\n            // console.log(\"##########\",reponse.data);\n            axios.defaults.headers.common['Authorization'] =`Bearer ${userDetail.token}`;\n\n            return response.data;\n    })\n}\nexport const signin=(signinData) =>(dispatch,getState,{axios})=>{\n    return new axios.post(USER_SIGNIN,signinData).then(response=>{\n        let userDetail=response.data;\n        dispatch({\n            type:\"SIGNIN_USER\",\n            payload:userDetail\n        });\n        axios.defaults.headers.common[\"Authorization\"]= `Bearer ${userDetail.token}`;\n        return response.data;\n    })\n}\n\nexport const forgetpassword=(emailPassed)=>(dispatch,getState,{axios})=>{\n    return new axios.post(FORGET_PASSWORD,{ email: emailPassed.email} ).then(response=>{\n        return response.data;\n    })\n}\n\nexport const resetpassword =(resetData) => (dispatch,getState,{axios})=>{\n    return new axios.post(RESET_PASSWORD,resetData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const signout=()=>(dispatch,getState,{axios}) =>{\n    dispatch({\n        type:\"SIGNOUT\",\n        payload:null\n    });\n    axios.defaults.headers.common[\"Authorization\"]=\"\";\n    return null;\n\n\n}","export const USER_LOGIN = '/signin';\nexport const USER_SIGNUP= '/signup';\nexport const APPLY_JOB = '/jobs/:jobId';\nexport const AVAILABLE_JOBS='/jobs';\nexport const USER_SIGNIN=\"/signin\";\nexport const ALL_CANDIDATES=\"/candidates\";\nexport const DELETE_A_CANDIDATE=\"/candidates/:candidateId\";\nexport const DELETE_A_RECRUITER=\"/recruiters/:recruiterId\";\nexport const ALL_RECRUITERS=\"/recruiters\";\nexport const DELETE_A_JOB=\"/jobs/:jobId\";\nexport const ALL_JOBS=\"/jobs\";\nexport const POST_JOB=\"/jobs\";\nexport const POSTED_JOBS=\"/jobs/posted\";\nexport const GET_CANDIDATE_BY_JOBID=\"/jobs/posted/:jobId\";\nexport const FORGET_PASSWORD=\"/forgetpassword\";\nexport const RESET_PASSWORD=\"/resetpassword\";\nexport const APPLIED_JOBS=\"/applications\";","import React, { Component } from 'react'\nimport { Menu, Icon,Typography, Layout } from 'antd';\nimport { Link } from 'react-router-dom'\nimport {signout} from \"../redux/actions/auth\";\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux'\n\nconst { SubMenu } = Menu;\n\nconst { Title } = Typography;\n\nclass Navbar extends React.Component {\n   \n  state = {\n    current: 'mail',\n    redirect:false,\n    path:\"/signin\"\n  };\n\n\n  handleClick = (e,to) => {\n      if(to==\"/signout\"){\n      e.preventDefault();\n      this.props.signout();\n      this.setState({\n        redirect:true\n      })\n    }else{\n        return;\n    }\n  };\n\n\n\n  render() {\n    if (this.state.redirect) {\n        return <Redirect to='/signin'/>;\n      }\n    \n    const { text , to, history } = this.props;\n\n    \n      if(this.props.userData.auth.userdetails.role==\"0\")\n      {\n          this.state.path=\"/candidate/jobs\";\n      }else if(this.props.userData.auth.userdetails.role==\"1\")\n      {\n        this.state.path=\"/recruiter\";\n      }else if(this.props.userData.auth.userdetails.role==\"2\")\n      {\n        this.state.path=\"/admin\";\n      }\n    \n\n\n    return (\n    //   <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n  \n    <Layout\n        style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '5px 10px'\n        }}\n       >\n\n            <Title level={2}key=\"mail\">\n            <Link to={this.state.path}>Job portal</Link> \n            </Title>\n            <Title level={4} key=\"mail\">\n            <Link onClick={(e) => this.handleClick(e,to)} to={to}>{text}</Link>\n            </Title>\n       </Layout>\n    )\n}\n\n}\n\nconst mapStateToProps=(store)=>{\n  return({\n      userData:store\n  })\n}  \n\n\n\n\nexport default connect(mapStateToProps, { signout })(Navbar);","export const HOME ='/';\nexport const SIGNIN=\"/signin\";\nexport const SIGNUP=\"/signup\";\nexport const SIGNOUT=\"/signout\";\nexport const CANDIDATE_HOME = '/candidate/jobs';\nexport const CALL_CANDIDATE_BY_ADMIN = \"/admin\";\nexport const RECRUITER_HOME=\"/recruiter/jobs\";\nexport const ALL_CANDIDATES=\"/admin/candidates\";\nexport const ALL_RECRUITERS=\"/admin/recruiters\";\nexport const ALL_JOBS=\"/admin/jobs\";\nexport const AVAILABLE_JOBS=\"/candidate/jobs\";\nexport const VIEW_APPLIED_JOBS=\"/candidate/jobs/applications\";\nexport const ADMIN_DASHBOARD=\"/admin\";\nexport const ADMIN_SIGNIN=\"/adminsignin\";\nexport const RESET_PASSWORD=\"/resetpasswordsteps\";\nexport const RECRUITER=\"/recruiter\";\n\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Button,\n    AutoComplete,\n    Icon,\n    Radio,\n  } from 'antd';\n  import Navbar from \"../components/Navbar\";\n  import { signup } from \"./../redux/actions/auth\"\n  import { connect } from 'react-redux'\n  import { AVAILABLE_JOBS,RECRUITER_HOME,SIGNIN } from './../constants/Routes';\n\n  const AutoCompleteOption = AutoComplete.Option;\n  \n  class SignupForm extends React.Component {\n\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      nameFieldText: \"Name\",\n      isVisible:false\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          // console.log('Received values of form: ', values);\n          this.props.signup(values).then((data)=>{\n              if(data.role==\"0\"){\n                  this.props.history.push(AVAILABLE_JOBS);\n              }\n              else if(data.role==\"1\"){\n                this.props.history.push(RECRUITER_HOME);\n              }\n        \n          })\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    handleWebsiteChange = value => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({ autoCompleteResult });\n    };\n\n    recruiterClicked=()=>{\n      this.state.nameFieldText=\"Company Name\";\n      this.state.isVisible=true\n    }\n    candidateClicked=()=>{\n      this.state.nameFieldText=\"Your  Name\"\n      this.state.isVisible=true\n    }\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { autoCompleteResult } = this.state;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n   \n      const websiteOptions = autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      ));\n\n    \n  \n      return (\n        <div >\n          \n        <Navbar text=\"Sign in\" to=\"/signin\"/>\n        <h3 align=\"center\"><span  className=\"h2WrapperSignup\">Sign up for a New Account</span></h3>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"wrapperFormSignup\">\n\n\n\n        <Form.Item label=\"Your Profile\">\n            {getFieldDecorator('role',{\n                rules:[{required: true,message: \"Please select your role!\"}]\n            })(\n                <Radio.Group>\n                <Radio.Button value=\"0\" onClick={this.candidateClicked}>I am a Candidate</Radio.Button>\n                <Radio.Button value=\"1\" onClick={this.recruiterClicked}>I am a Recruiter</Radio.Button>\n                </Radio.Group>,\n            )}\n          </Form.Item>\n\n\n          <Form.Item style={{display: this.state.isVisible ? 'block' : 'none' }}\n            label={\n              <span>\n                { this.state.nameFieldText}&nbsp;\n                <Tooltip title=\"Please write official name seperated with spaces\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('name', {\n              rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"E-Mail\">\n            {getFieldDecorator('email', { //check\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>     \n              {/* kdsfkjdsf *********************************************************************************************************/}\n\n          <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n              {\n                min:6,\n                message:\"Password should be minimum of 6 character\"\n            }\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n\n       \n\n          \n\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign up \n            </Button>\n          </Form.Item>\n        </Form>\n       \n          \n       </div>\n            \n      );\n    }\n  }\n  \n\n  const mapStateToProps = ({auth}) => {\n    return ({\n      userdetails: auth.userdetails\n    })\n   }\n   \n\n\nSignupForm = connect(mapStateToProps, {signup})(SignupForm);\n\n\n\nexport const Signup = Form.create({ name: 'normal_signup' })(SignupForm);\n\n  ","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,notification } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin,signout} from '../redux/actions/auth';\nimport { AVAILABLE_JOBS,CALL_CANDIDATE_BY_ADMIN,RECRUITER } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\nimport {SIGNUP,ADMIN_SIGNIN,SIGNIN,RESET_PASSWORD} from \"../constants/Routes\";\n\nconst openNotificationWithIcon = (type,message,desc) => {\n  notification[type]({\n    message: message,\n    description:desc,\n  });\n};\n\nclass SigninForm extends React.Component {\n  \n  handleSubmit = e => {\n\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n\n          if(response.role==\"0\")\n           this.props.history.push(AVAILABLE_JOBS);\n           if(response.role==\"2\"){\n             this.props.signout();\n            openNotificationWithIcon('error',\"ADMIN CAN'T GOT THROUGH THIS ROUTE\");\n            this.props.history.push(SIGNIN);\n           }\n            if(response.role==\"1\")\n            this.props.history.push(RECRUITER);      \n        })\n      }\n    });\n  };\n\n  render() {\n    // console.log(\"@@@@@@@@@\",this.props.userdetails.role)\n    if(this.props.userdetails!=undefined){\n\n      const {role}=this.props.userdetails;\n      if(role==0){\n        this.props.history.push(\"/candidate/jobs\");\n      }else if(role==1){\n        this.props.history.push(\"/recruiter/jobs\");\n      }else if (role==2){\n        this.props.history.push(\"/admin\");\n      }\n\n    }\n   \n\n    const { getFieldDecorator } = this.props.form;\n\n\n\n\n    return (\n      <div>\n      <Navbar text=\"Sign up\" to={SIGNUP}/>\n      \n          <h3 align=\"center\"><span  className=\"h2WrapperSignup\">Sign in to Existing Account</span></h3>\n\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' },\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n      \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          <br/>\n          \n            Forgot password ? <Link to={RESET_PASSWORD}>Click Here </Link>\n         \n         <br/>\n          OR <b><Link to={SIGNUP}>register now!</Link></b>\n        </Form.Item>\n        <div align=\"center\">\n             <Link to={ADMIN_SIGNIN}><span  className=\"links\"><u>Click for Admin Sign in Window</u></span></Link>\n          </div> \n      </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \nSigninForm = connect(mapStateToProps, {signin,signout}) (SigninForm);\nexport const Signin = Form.create({ name: 'normal_signin' })(SigninForm);","import { AVAILABLE_JOBS, APPLY_JOB,DELETE_A_JOB,ALL_JOBS,POST_JOB,POSTED_JOBS,APPLIED_JOBS } from './../../constants/APIS';\n\nexport const availablejobs= (meta) => (dispatch,getState,{axios})=>{\n    return new axios.get(AVAILABLE_JOBS,{ params: meta} ).then(response=>{\n        return response;//changed .data\n    })\n}\n\nexport const applyForJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let APPLY=APPLY_JOB.replace(\":jobId\", jobId);\n    return new axios.post(APPLY).then(response=>{\n        return response;\n    })\n}\n\nexport const deleteJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let DEL_JOB=DELETE_A_JOB.replace(\":jobId\",jobId);\n    return new axios.delete(DEL_JOB).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobs=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_JOBS,{params:meta}).then(response=>{\n        return response;\n    }) \n}\n\nexport const postJob=(jobData)=>(dispatch,getState,{axios})=>{\n    return new axios.post(POST_JOB,jobData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobsByRecruiter=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(POSTED_JOBS,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\n\nexport const appliedjobslist=(meta)=>(dispatch,getStet,{axios})=>{\n    return new axios.get(APPLIED_JOBS,{params:meta}).then(response=>{\n        return response;\n    })\n}","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nIcon,\nPopconfirm,\nSpin,\n} from 'antd';\nimport {applyForJob, availablejobs,deleteJob,allJobs} from \"../redux/actions/jobs\";\nimport { connect } from 'react-redux';\n\nclass JobsView extends Component {\n\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        total: 0,\n        loading: false,\n        textPop:\"Want to apply to this job?\"\n    }\n\ncomponentDidMount() {\n    this.setState({\n        loading : true\n    })\n    if(this.props.userData.auth.userdetails.role==\"0\"){\n       const pagination={\n            page: this.state.page,//no prob i this.state\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n\n                total:response.metadata.count,\n                list:response.data,\n                loading: false\n            });\n        })\n    }else{\n        const pagination={\n            page: this.state.page,//no prob i this.state\n            limit:this.state.limit\n        }\n\n        this.props.allJobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list: response.data,\n                loading: false\n            })\n        });\n    }\n}\n\n\n    applyToJob=(e,jobUuid)=>{\n        // console.log(\"APPLY TO JOB \",jobUuid);\n        e.preventDefault();\n\n        let jobDetails= this.props.applyForJob(jobUuid).then(data=>{\n            const updatedJobs = this.state.list.map(job=>{\n                return job.id === jobUuid ? \n                {\n                  ...job, isApplied: true\n                } : \n                job\n            })\n            this.setState({\n                list: updatedJobs\n            })\n        });\n\n    }\n\n    delJob=(e,jobUuid,isDisabled)=>{\n        e.preventDefault();\n                let jobDetails=this.props.deleteJob(jobUuid).then(data=>{\n                    const updatedJobs=this.state.list.map(job=>{\n                        return job.id===jobUuid ?\n                        {\n                            ...job, isApplied:true\n                        }:\n                        job\n                    })\n                    this.setState({\n                        list:updatedJobs\n                    })\n                })\n    }\n\n    //PAGINATE HERE.....\n    onChange = page => {\n        const pagination={\n            page: page,\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list:response.data\n            });\n        })\n      };\n\n    \n    render() {\n\n\n        const { list, loading } = this.state;\n\n        if(loading) {\n            return  <center><Spin /></center> \n        }\n        if(list.length<1){\n            return(\n                <h2><center>No Jobs Published So far...</center></h2>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF JOBS</h2>\n                {\n                this.props.userData.auth.userdetails.role==\"0\" ? (\n                    list.map(item=>{\n                        return ( ///FFINEE-----------------------------------------\n                            <div className=\"cards\">\n                             <Card title={item.job_title}><p><h5>Description<h6>{item.job_description}</h6></h5><hr/> <b>{item.companyname}</b></p>\n                             <Popconfirm placement=\"right\" title={this.state.textPop} disabled={item.isApplied} onConfirm={(e) => this.applyToJob(e,item.id)}  okText=\"Yes\" cancelText=\"No\">\n                             <Button type=\"primary\"  disabled={item.isApplied}>Apply</Button>\n                             </Popconfirm>\n                             </Card>\n                            </div>\n                          ) \n                })) : \n                list.map(item=>{\n                    return (\n                        <div className=\"cards\">\n                            <Card title={item.job_title}><p><h5>Description<h6>{item.job_description}</h6></h5><hr/> <b>{item.companyname}</b></p>\n                             {/* <Button type=\"danger\" onClick={(e) => this.delJob(e,item.id,item.isApplied)} disabled={item.isApplied}>Delete</Button> */}\n                            \n                             <Popconfirm placement=\"right\" title={this.state.textPop} disabled={item.isApplied} onConfirm={(e) => this.delJob(e,item.id,item.isApplied)}   okText=\"Yes\" cancelText=\"No\">\n                             <Button type=\"danger\"  disabled={item.isApplied}>Delete</Button>\n                             </Popconfirm>\n                             </Card>\n                      </div>\n                    ) \n                })\n                }\n            <Pagination className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n            </React.Fragment>  \n        )}\n}\n        \nconst mapStateToProps=(store)=>{\n   return({\n       userData:store\n   })\n}  \n\n\n\nexport default connect(mapStateToProps, {applyForJob, availablejobs, allJobs, deleteJob}) (JobsView);//take then send\n\n","import React, { Component } from 'react'\nimport {\n  Form,\n} from 'antd';\n\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {availablejobs} from \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport JobsView from '../components/JobsView'\nimport {SIGNOUT,VIEW_APPLIED_JOBS} from \"../constants/Routes\";\n\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n    current:1\n  };\n\n  onChange = page => {\n    this.setState({\n      current: page,\n    });\n  };\n\n  render() {\n    const { availablejobs } = this.props; \n    return (\n      <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          <div align=\"left\">\n             <Link to={VIEW_APPLIED_JOBS}><span  className=\"links\"><u>View Applied Jobs</u></span></Link>\n          </div> \n          <div className=\"listCards\" >\n            <JobsView  availablejobs={availablejobs}/>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{ \n  return{\n    userData:state\n  }\n}\n\nCandidateHome=connect(mapStateToProps,{availablejobs})(CandidateHome);\nexport const CandidateJobs = Form.create({ name: 'candidateJobs' })(CandidateHome);\n\n","import React, { Component } from 'react';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {ALL_CANDIDATES,ALL_RECRUITERS,ALL_JOBS,SIGNOUT} from \"../constants/Routes\";\nimport {Card,Col,Row} from \"antd\";\nexport default class AdminHome extends Component {\n    render() {\n        return (\n              <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <div style={{ background: '#ECECEC', padding: '15px' }}>\n               <span><center><h2>Click on Card to view the list</h2></center></span> \n\n                  <Row gutter={16}>\n                    <Col span={8}><Link to={ALL_CANDIDATES}>\n                      <Card title=\"Candidates\" bordered={false}>\n                      All candidates with their email and Id's are listed. Manage Candidates here.\n                      </Card></Link>\n                    </Col>\n                    <Col span={8}><Link to={ALL_RECRUITERS}>\n                      <Card title=\"Recruiters\" bordered={false}>\n                      All Recruiters with their email and Id's are listed. Manage Recruiters here.\n                      </Card></Link>\n                    </Col>\n                    <Col span={8}><Link to={ALL_JOBS}>\n                      <Card title=\"Jobs Available\" bordered={false}>\n                      Here you can manage the jobs posted by Recruiters. Click on Jobs above to view.\n                      </Card></Link>\n                    </Col>\n                  </Row>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nSpin,\nPopconfirm\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {candidateDelete} from '../redux/actions/candidates';\nimport {allCandidates} from \"../redux/actions/candidates\";\nimport {Link} from \"react-router-dom\";\n\n\nclass CandidatesList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true,\n        textPop:\"Want to Delete this candidate?\"\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n\n    this.props.allCandidates(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\n\ndeleteCandidate=(e,candidateUuid)=>{\n        \n        e.preventDefault();\n\n        let candidateDetail= this.props.candidateDelete(candidateUuid).then(data=>{\n            const updatedCandidates = this.state.list.map(candidate=>{\n                return candidate.id === candidateUuid ? \n                {\n                    ...candidate, isApplied: true\n                } : \n                candidate\n            })\n            this.setState({\n                list: updatedCandidates\n            })\n        });\n    }\n\n     \n \nonChange = page => {\n   const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allCandidates(pagination).then(response=>{\n       this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n   \n\n\n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h2><center>No candidates to Show currently...</center></h2>\n            )\n        }\n        return (\n            \n            <React.Fragment>\n                <h2 align=\"center\">LIST OF CANDIDATES</h2>\n\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.email}><p>Name:{candidate.name}<br/>ID:{candidate.id}</p>\n                     {/* <Button type=\"danger\" onClick={(e) =>  this.deleteCandidate(e,candidate.id)} disabled={candidate.isApplied}>Delete</Button> */}\n                     <Popconfirm placement=\"right\" title={this.state.textPop} disabled={candidate.isApplied} onConfirm={(e) => this.deleteCandidate(e,candidate.id)}  okText=\"Yes\" cancelText=\"No\">\n                             <Button type=\"danger\"  disabled={candidate.isApplied}>Delete</Button>\n                             </Popconfirm>                   \n                   \n                   \n                   \n                     </Card>\n              </div>\n                ) \n                })\n            }\n            <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default connect(null, {candidateDelete, allCandidates}) (CandidatesList);//take then send","import { ALL_CANDIDATES,DELETE_A_CANDIDATE,GET_CANDIDATE_BY_JOBID } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allCandidates=(meta) => (dispatch,getState,{axios})=>{\n    return new axios.get(ALL_CANDIDATES,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\nexport const candidateDelete=(candidateUuid)=> (dispatch,getState,{axios})=>{\n    let DEL_CANDI=DELETE_A_CANDIDATE.replace(\":candidateId\", candidateUuid);\n\n    return new axios.delete(DEL_CANDI).then(response=>{\n        return response.data;\n    })\n}\n\n\nexport const getAppliedCandidates=(jobId,meta)=>(dispatch,getState,{axios})=>{\n    let JOB_ID=GET_CANDIDATE_BY_JOBID.replace(\":jobId\",jobId);\n\n    return new axios.get(JOB_ID,{ params: meta}).then(response=>{\n        return response;\n    })\n}","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport CandidateList from '../components/CandidatesList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  render() {\n\n    const { allCandidates } = this.props; \n    return (\n    <div>\n        <div>\n            <Navbar text=\"Logout\" to={SIGNOUT}/>\n        </div>\n        <div align=\"left\" className=\"linksDivLeft\">\n            <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n        </div> \n        <div className=\"listCards\">\n      <CandidateList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(CandidateHome);","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nSpin,\nPopconfirm\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {recruiterDelete,allRecruiters} from \"../redux/actions/recruiters\";\n\n\nclass RecruiterList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true,\n        textPop:\"Want to delete this recruiter\"\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        this.setState({//check what coming inside list\n              total:response.metadata.count,\n              list:response.data,\n              loading:false\n        })\n    })\n}\n   \nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n\ndeleteRecruiter=(e,recruiterUuid)=>{//uuid kahan se ayegi jispe click hoga\n    e.preventDefault();\n    let recruiterDetails=this.props.recruiterDelete(recruiterUuid).then(data=>{\n        const updatedRecruiters = this.state.list.map(recruiter=>{\n            return recruiter.id===recruiterUuid ?\n            {\n                ...recruiter,isApplied:true //only isApplied replace rest same.\n            }:\n            recruiter\n        });\n        this.setState({\n            list:updatedRecruiters\n        })\n    })\n}\n\n\n    render(){\n        const {list,loading}=this.state //got list form inside current state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h2><center>No Recruiters present...</center></h2>\n            )\n        }\n        return(\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF RECRUITERS</h2>\n            {\n            list.map(recruiter=>{\n                return(\n                    <div className=\"cards\">\n                    <Card title={recruiter.email}><p>{recruiter.name}<br/>ID:{recruiter.id}</p>\n                    {/* <Button type=\"danger\" onClick={(e) => this.deleteRecruiter(e,recruiter.id)} disabled={recruiter.isApplied}>Delete</Button> */}\n                    \n                    <Popconfirm placement=\"right\" title={this.state.textPop} disabled={recruiter.isApplied} onConfirm={(e) => this.deleteRecruiter(e,recruiter.id)}   okText=\"Yes\" cancelText=\"No\">\n                             <Button type=\"danger\"  disabled={recruiter.isApplied}>Delete</Button>\n                             </Popconfirm>\n                    \n                    \n                    </Card>           \n                 </div>\n                )\n\n            })\n        }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n    }  \n}\n\n\nexport default connect(null,{allRecruiters,recruiterDelete})(RecruiterList);\n\n","import { ALL_RECRUITERS,DELETE_A_RECRUITER } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allRecruiters=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_RECRUITERS,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\nexport const recruiterDelete=(recruiterUuid)=>(dispatch,getState,{axios})=>{\n    let DEL_RECRUITER=DELETE_A_RECRUITER.replace(\":recruiterId\",recruiterUuid);\n   \n    return axios.delete(DEL_RECRUITER).then(response=>{\n        return response.data;\n    })\n}\n\n\n\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport RecruiterList from '../components/RecruiterList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\n class RecruiterHome extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <div>\n                  <Navbar text=\"Logout\" to={SIGNOUT}/>\n                </div>\n                <div align=\"left\" className=\"linksDivLeft\">\n                  <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                  <RecruiterList />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(RecruiterHome);\n\n\n\n","import React, { Component } from \"react\";\nimport Navbar from \"./../components/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport JobsList from \"../components/JobsView\";\nimport {SIGNOUT,ADMIN_DASHBOARD} from \"../constants/Routes\";\n\nclass JobHome extends Component {\n\tstate = {\n\t\tinitLoading: false,\n\t\tloading: false,\n\t\tdata: []\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar text=\"Logout\" to={SIGNOUT}/>\n\t\t\t\t</div>\n\t\t\t\t<div align=\"left\" className=\"linksDivLeft\">\n\t\t\t\t\t<Link to={ADMIN_DASHBOARD}>\n\t\t\t\t\t\t<span className=\"links\">\n\t\t\t\t\t\t\t<u>Dashboard</u>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</div >\n                <div className=\"listCards\">\n                    <JobsList />\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tcandidateData: state\n\t};\n};\n\nexport default connect(mapStateToProps)(JobHome);\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\nimport { \n  Form,\n    Input,\n    Button,\n    Icon,\n   } from 'antd';\nimport {postJob} from  \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router';\n\nconst { TextArea } = Input;\n\nclass RecruiterHome extends React.Component {\n  state={\n    redirect:false,\n    \n  }\n\n  static getDerivedStateFromProps(userData,state){\n    return {\n      ...state,\n      companyName: userData.userData.auth.userdetails.name\n    }\n  }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          console.log(\"%%%%%\",values);\n          if (!err) {\n              this.props.postJob(values).then(response=>{\n                this.setState({\n                  redirect:true\n                })\n              });\n          }\n        });\n      };\n    \n      render() {\n        if (this.state.redirect) {\n          return <Redirect to='/recruiter/jobs'/>;\n        }\n        const { getFieldDecorator } = this.props.form;\n        return (\n          <div>\n          <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          </div>\n          <div align=\"left\">\n            <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Your Published Jobs!</u></span></Link>\n          </div> \n          <div className=\"wrapperForm\">\n          <Form  onSubmit={this.handleSubmit} className=\"login-form\">\n            <h2><strong>Publish New Job</strong></h2>\n\n            <Form.Item>\n              {getFieldDecorator('companyname', {\n                rules: [],\n                initialValue: this.state.companyName\n              })(\n                <Input\n                  prefix={<Icon type=\"copyright\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  disabled=\"true\" value={this.state.companyName} defaultValue={this.state.companyName}\n                />,\n              )}\n            </Form.Item>\n            \n            \n            <Form.Item>\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please mention title of Job!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"tag\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Job Title\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('description', {\n                rules: [{ required: true, message: 'Please mention description of job!' }],\n              })(\n                <TextArea rows={9}\n                  prefix={<Icon type=\"edit\" style={{ color: 'rgba(0,0,0,.25)' }}\n                  rows={4} />}\n                  \n                  placeholder=\"Job Description\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Publish Job\n              </Button>\n            </Form.Item>\n          </Form>\n          </div>\n          </div>\n        );\n      }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    userData:state\n  }\n}\n\n\nRecruiterHome=connect(mapStateToProps,{postJob})(RecruiterHome);\n\nexport const RecruiterPostJobs = Form.create({ name: 'candidateJobs' })(RecruiterHome);\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nSpin\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {allJobsByRecruiter} from \"../redux/actions/jobs\";\nimport { Link } from 'react-router-dom'\n\n\n\n\n\n\nclass PostedJobList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        this.setState({//check what coming inside list\n            total:response.metadata.count,\n            list:response.data,\n            loading:false\n        })\n    })\n}\n\nonChange = page => {\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n   \n\n\n\n    render(){\n        const {list,loading}=this.state //got list form inside current state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>No Jobs Published!</center></h3>\n            )\n        }\n        return(\n\n            <React.Fragment>\n            {\n           \n                list.map(jobs=>{\n                let linkto=\"/recruiter/jobs/\"+jobs.id;\n                return(\n\n                    <div className=\"cards\">\n                    <Card title={jobs.job_title}><p>{jobs.job_description}</p>\n                    <Link to={linkto}>View Applications</Link>\n                    </Card>\n              </div>\n                )\n            })\n            }\n            <Pagination className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        )\n    }  \n}\n\n\n\nexport default connect(null,{allJobsByRecruiter})(PostedJobList);\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport PostedJobList from \"../components/JobsByRecruiter\"\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\n\n class PostedJobs extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to=\"/signout\"/>\n                <div align=\"left\">\n                    <Link to=\"/recruiter\"><span  className=\"links\"><u>Post a Job !!</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                <h2><center>Your Posted Jobs Will Appear Here</center></h2>\n                    <PostedJobList />\n                </div>     \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(PostedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nSpin,\nPagination} from 'antd';\nimport { connect } from 'react-redux';\nimport {getAppliedCandidates} from \"../redux/actions/candidates\";\n\n\nclass ApplicantList extends Component {\n\n    state = {\n        list: [],\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        \n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\nonChange = page => {\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n    \n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>No Applications Received</center></h3>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.name}>Contact:{candidate.email}<hr/>ID :{candidate.id}</Card>\n                   </div>\n                ) \n                })\n            }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return ({\n        userData:state\n    })\n}\n\nexport default connect(mapStateToProps, {getAppliedCandidates}) (ApplicantList);//take then send\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport ApplicantsList from \"../components/ApplicantList.jsx\";\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\n\n\n class ApplicantsForJob extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <div align=\"left\" className=\"linksDivLeft\">\n                    <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Published Jobs</u></span></Link>\n                </div> \n                <div align=\"right\" className=\"linksDivRight\">\n                    <Link to=\"/recruiter\"><span  className=\"linksRight\"><u>Post New Job</u></span></Link>\n                </div> \n                  <ApplicantsList jobId={this.props.match.params.jobId}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(ApplicantsForJob);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport {CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\n\n\nclass ForgetPassword extends React.Component {\n  handleSubmit = e => {\n    \n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n          this.props.forgetpassword(values);\n      }else{\n          const temp=\"ERROR OCCURED\"+err;\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'E-Mail is needed to Reset password!' },\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n      \n        <Form.Item>\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ForgetPass = Form.create({ name: 'normal_signin' })(ForgetPassword);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,Tooltip,InputNumber, Checkbox } from 'antd';\nimport { connect } from 'react-redux'\nimport {resetpassword} from '../redux/actions/auth';\n\nclass ResetPassword extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      \n      if (!err) { \n        delete values.confirm;\n        this.props.resetpassword(values);    \n\n      }\n    });\n  };\n  state={\n    email:''\n  }\n\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n\n  render() {\n   \n    const { getFieldDecorator } = this.props.form;\n    const { email } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item label={\n              <span>\n                Your E-mail\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n            initialValue :email\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n              {\n                min:6,\n                message:\"Password should be minimum of 6 character\"\n            }\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n\n          <Form.Item label=\"Confirm Password\" hasFeedback>\n            {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n          \n        <Form.Item  label={\n              <span>\n                OTP&nbsp;\n                <Tooltip title=\"OTP has been shared to your account\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('otp', {\n            rules: [{ required: true, message: 'OTP will be 6 digit code sent to your account' },\n                {\n                    min:6,\n                    message:\"OTP too short\"\n                },\n                {\n                    max:6,\n                    message:\"OTP too long\"\n                }\n        ],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"otp\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ResetPass=Form.create({name:\"reset_form\"})(ResetPassword);","import React, { Component } from 'react'\nimport { Steps, Button, message, notification, Spin } from 'antd';\nimport  {ForgetPass as ForgetPassword} from './ForgetPassword';\nimport {forgetpassword} from '../redux/actions/auth';\nimport { connect } from 'react-redux'\nimport {ResetPass} from './ResetPassword';\nimport {resetpassword} from '../redux/actions/auth';\nimport Navbar from \"../components/Navbar\";\nimport {SIGNUP,HOME} from \"../constants/Routes\";\n\nconst { Step } = Steps;\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n      message: message,\n      description:desc,\n    });\n  };\n\nclass ForgetPassSteps extends React.Component {\n  \n  state = {\n    current: 0,\n    loading: false,\n    email: ''\n  }\n\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current, loading: false, email:this.state.email });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current, loading: false });\n  }\n\n    handleResetRequest = (values) => {\n      this.setState({\n          loading: true\n      })\n      this.props.forgetpassword(values).then(response=>{\n          this.setState({\n            email :values.email\n          })\n          this.next();\n      }).catch(err=>{\n        // openNotificationWithIcon('error',\"Check Email\",\"E-Mail you entered doesn't exists!\")\n        this.setState({\n            loading : false\n        })\n      })\n  }\n\n  handleFinalResetRequest =(values)=>{\n      this.props.resetpassword(values).then(response=>{\n          message.success('Password Changed Successfully')\n          this.props.history.push(HOME);\n      }).catch((err)=>{\n        console.log(err)\n          // openNotificationWithIcon('error', err.data.errors[0].message);\n      })\n  }\n\n  \n\n  render() {\n\n    const steps = [\n      {\n        title: 'ForgotPassword',\n        content: <ForgetPassword loading={this.state.loading} forgetpassword={this.handleResetRequest}/>,\n      },\n      {\n        title: 'ResetPassword',\n        content: <ResetPass current={this.state.current} email={this.state.email} resetpassword={this.handleFinalResetRequest} />,\n      },\n    ];\n    const { current, loading } = this.state;\n    return (\n        <div>\n         <Navbar text=\"Sign up\" to={SIGNUP}/>\n\n      <div className=\"wrapperForgetPass\">\n        <Steps current={current}>\n          {steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps> \n\n        <div className=\"steps-content\">{loading ? <span className=\"spin\"><Spin /></span> : steps[current].content}</div>\n        <div className=\"steps-action\" align=\"right\">\n          {current < steps.length - 1 && (\n          <Button type=\"default\" onClick={() => this.next()}>\n            Already Have An OTP?\n            </Button>\n          )}\n\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n                Go Back\n            </Button>\n          )}\n        </div>\n      </div>\n      </div>\n\n    );\n  }\n}\nexport const ForgetPassStep=connect(null ,{\n    forgetpassword,resetpassword\n})(ForgetPassSteps);","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nSpin} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\n\n\nclass AppliedJobsList extends Component {\n\n    state = {\n        list: [],\n         page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n        \n\n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n           <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>You have not applied to any Job !!</center></h3>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n            list.map(jobs=>{\n              return (\n                <div className=\"cards\">\n                <Card title={jobs.job_title}>{jobs.job_description}<br/>ID :{jobs.id}</Card>\n               </div>\n              ) \n            })\n        }\n        <Pagination  className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default connect(null, {appliedjobslist}) (AppliedJobsList);//take then send","import React, { Component } from 'react'\n\nimport {connect} from \"react-redux\";\nimport AppliedJobsList from '../components/AppliedJobsList';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT,AVAILABLE_JOBS} from \"../constants/Routes\";\n\nclass AppliedJobs extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  \n  render() {\n\n    const { allCandidates } = this.props; //took out function and passed\n    return (\n    <div>\n      <div>\n        <Navbar text=\"Logout\" to={SIGNOUT}/>\n     </div>\n     <div align=\"left\">\n        <Link to={AVAILABLE_JOBS}><span  className=\"links\"><u>View Available Jobs</u></span></Link>\n    </div > \n    <div className=\"listCards\">\n       <h2><center>Your Applied Jobs</center></h2>\n      <AppliedJobsList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(AppliedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nnotification} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\nimport {HOME} from \"../constants/Routes\";\nimport {signout} from \"../redux/actions/auth\";\nexport function AuthenticationControl (Component){\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description:desc,\n    });\n    };\n    \n    \n\n    class authControl extends React.Component{\n\n        componentDidMount() {\n            this.handleAuth();\n        }\n        state={\n            isAuthenticated:true\n        }\n\n        handleAuth = () => {\n                const {history}=this.props;\n                const {role}=this.props.userData.auth.userdetails;\n                // if((this.props.location.pathname.startsWith(\"/candidate/jobs/applications\"))&&(role==\"1\")){\n                //         history.push(\"/signin\");\n                //         openNotificationWithIcon('error',\"Not authorized to Access this route\");\n                //         this.state.isAuthenticated=false;\n                // }\n                if(this.props.location.pathname.startsWith(\"/admin\")&&(role != \"2\")){\n                    this.props.signout();\n                    history.push(\"/signin\");\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n                    \n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/candidate\")&& role!=\"0\"){\n                    this.props.signout();\n                    history.push(HOME);\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/recruiter\")&& role!=\"1\"){\n                   this.props.signout(); \n                    history.push(\"/signin\");\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n                    this.state.isAuthenticated=false;\n\n\n                }\n            }\n\n\n\n        render(){\n           return(\n           <div>\n           \n            { \n            this.state.isAuthenticated==true ?\n                <Component {...this.props}/> //which props?\n                : null  //render nothing\n            }\n\n            </div>\n           )\n        }\n\n    }\n    const mapStateToProps=(store)=>{\n        return({\n            userData:store\n        })\n    }\n    \n    return connect(mapStateToProps,{signout})(authControl);\n}\n\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox, notification } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin} from '../redux/actions/auth';\nimport { CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\n\nconst openNotificationWithIcon = (type,message,desc) => {\n  notification[type]({\n      message: message,\n      description: desc,\n  });\n};\nclass AdminSignin extends React.Component {\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n         \n           if(response.role==\"2\")\n            this.props.history.push(\"/admin\");\n        \n           else {\n            this.props.history.push(\"/signin\");\n            openNotificationWithIcon('error',\"You are not an admin\");\n\n            \n           } \n        })\n        \n\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <Navbar text=\"Not An Admin?\" to=\"/signin\"/>\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n          <h3><span class=\"adminh2\">ADMIN</span> Sign in Window</h3>\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {/* {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)} */}\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          \n        </Form.Item>\n      </Form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \n\n\n AdminSignin = connect(mapStateToProps, {signin}) (AdminSignin);//take then send\nexport const SigninAdmin = Form.create({ name: 'normal_signin' })(AdminSignin);\n\n// ReactDOM.render(<Signin />, mountNode);\n","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\";\nexport  class NoMatch extends Component {\n    render() {\n        return (\n            <div>\n                <h2><center>You have lost your way</center></h2>\n                <center> <Link to=\"/signin\">Click here to go to Sign in page</Link>\n                </center>  </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as AppRouter, Route,Switch } from 'react-router-dom';\nimport App from './App';\nimport { Signup } from './screens/Signup';\nimport { Signin } from './screens/Signin';\nimport {CandidateJobs}  from './screens/CandidateHome'\nimport AdminHome from './screens/AdminHome'\nimport CandidateList from './screens/CandidateList'\nimport RecruiterList from \"./screens/RecruiterList\"\nimport JobHome from \"./screens/JobsList\";\nimport {RecruiterPostJobs} from \"./screens/RecruiterHome\";\nimport PostedJobs from \"./screens/PostedJobs\";\nimport ApplicantsForJob from \"./screens/ApplicantsToJob\";\nimport {ForgetPass} from \"./screens/ForgetPassword\";\nimport {ResetPass} from \"./screens/ResetPassword\";\nimport {ForgetPassStep} from \"./screens/ForgetPassSteps\";\nimport AppliedJobs from \"./screens/AppliedJobs\";\nimport {AuthenticationControl} from \"./components/AuthenticationControl\";\nimport {SigninAdmin} from \"./screens/AdminSignin\";\nimport {NoMatch} from \"./components/NoMatch\";\nexport const Router = () => (\n    <AppRouter>\n        <Switch>\n        <Route exact path=\"/\"           component={Signin} />\n        <Route path=\"/signup\"           component={Signup} />\n        <Route path=\"/dashboard\"        component={App} />\n        <Route exact  path =\"/candidate/jobs\" component={AuthenticationControl(CandidateJobs)}/>\n        <Route path =\"/admin/candidates/\"   component={AuthenticationControl(CandidateList)} />\n        <Route path =\"/admin/recruiters/\"   component={AuthenticationControl(RecruiterList)} />\n        <Route path=\"/admin/jobs\" component={AuthenticationControl(JobHome)} />\n        <Route exact path='/admin' component={AuthenticationControl(AdminHome)} />\n        <Route exact path =\"/recruiter\" component={AuthenticationControl(RecruiterPostJobs)}  />\n        <Route exact path=\"/recruiter/jobs\" component={AuthenticationControl(PostedJobs)} />\n        <Route  path=\"/recruiter/jobs/:jobId\" component={AuthenticationControl(ApplicantsForJob)} />\n        <Route path=\"/forgetpassword\" component={ForgetPass} />\n        <Route path=\"/resetpassword\" component={ResetPass} />\n        <Route exact  path=\"/signin\" component={Signin} />\n        <Route path=\"/resetpasswordsteps\" component={ForgetPassStep} />\n        <Route path=\"/candidate/jobs/applications\" component={AuthenticationControl(AppliedJobs)} />\n        <Route path=\"/adminsignin\" component={SigninAdmin}/>\n        <Route path=\"*\">\n            <NoMatch/>\n        </Route>\n        </Switch>\n    </AppRouter>\n)","import React from 'react';\nimport './App.css';\nimport { Router } from './Router';\nimport { Provider } from 'react-redux';\nimport configstore from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { store, persistor } = configstore;\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router />\n      </PersistGate>  \n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n// import { Router }  from './Router';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}