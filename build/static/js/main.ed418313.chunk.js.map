{"version":3,"sources":["redux/reducers/index.js","redux/reducers/auth.js","redux/reducers/persistReducers.js","utilities/configureAxios.js","middlewares/index.js","redux/store.js","redux/actions/auth.js","constants/APIS.js","components/Navbar.jsx","constants/Routes.js","screens/Signup.jsx","screens/Signin.jsx","redux/actions/jobs.js","components/JobsView.jsx","screens/CandidateHome.jsx","screens/AdminHome.jsx","components/CandidatesList.jsx","redux/actions/candidates.js","screens/CandidateList.jsx","components/RecruiterList.jsx","redux/actions/recruiters.js","screens/RecruiterList.jsx","screens/JobsList.jsx","screens/RecruiterHome.jsx","components/JobsByRecruiter.jsx","screens/PostedJobs.jsx","components/ApplicantList.jsx","screens/ApplicantsToJob.jsx","screens/ForgetPassword.jsx","screens/ResetPassword.jsx","screens/ForgetPassSteps.jsx","components/AppliedJobsList.jsx","screens/AppliedJobs.jsx","components/AuthenticationControl.jsx","screens/AdminSignin.jsx","Router.jsx","App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","auth","state","userdetails","action","type","payload","persistConfig","key","storage","configPersistReducer","persistReducer","openNotificationWithIcon","message","desc","notification","description","axiosInstance","axios","create","baseURL","timeout","interceptors","request","use","config","a","async","then","persistStore","default","store","getState","headers","Authorization","token","response","data","err","saveError","errors","console","log","status","code","Promise","reject","createLogger","configMiddlewares","thunk","withExtraArgument","configureStore","enhancers","compose","applyMiddleware","middlewares","createStore","persistor","signin","signinData","dispatch","post","userDetail","defaults","common","Title","Menu","SubMenu","Typography","Navbar","current","redirect","path","handleClick","e","to","preventDefault","props","signout","setState","this","text","history","userData","role","style","display","flexDirection","justifyContent","alignItems","padding","level","onClick","React","Component","connect","HOME","SIGNIN","SIGNOUT","RECRUITER_HOME","AVAILABLE_JOBS","RECRUITER","AutoCompleteOption","AutoComplete","Option","SignupForm","confirmDirty","autoCompleteResult","handleSubmit","form","validateFieldsAndScroll","values","signup","push","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","getFieldDecorator","website","align","className","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","rules","required","hasFeedback","validator","min","Password","onBlur","title","whitespace","Group","Button","offset","htmlType","signupData","Signup","Form","name","SigninForm","prefix","color","placeholder","Signin","availablejobs","meta","get","params","JobsView","list","isApplied","page","limit","total","loading","textPop","applyToJob","jobUuid","applyForJob","updatedJobs","job","id","delJob","isDisabled","deleteJob","onChange","pagination","metadata","count","allJobs","length","Fragment","item","job_title","job_description","placement","disabled","onConfirm","okText","cancelText","pageSize","jobId","APPLY","replace","DEL_JOB","delete","CandidateHome","initLoading","CandidateJobs","AdminHome","CardDeck","Card","Body","Text","CandidatesList","deleteCandidate","candidateUuid","candidateDelete","updatedCandidates","candidate","allCandidates","email","DEL_CANDI","candidateData","RecruiterList","allRecruiters","deleteRecruiter","recruiterUuid","recruiterDelete","updatedRecruiters","recruiter","DEL_RECRUITER","RecruiterHome","JobHome","TextArea","Input","postJob","rows","jobData","RecruiterPostJobs","PostedJobList","allJobsByRecruiter","jobs","linkto","PostedJobs","ApplicantList","getAppliedCandidates","JOB_ID","ApplicantsForJob","match","ForgetPassword","forgetpassword","ForgetPass","ResetPassword","resetpassword","max","ResetPass","Step","Steps","ForgetPassSteps","handleResetRequest","next","catch","handleFinalResetRequest","success","steps","content","loa","marginLeft","prev","ForgetPassStep","emailPassed","resetData","AppliedJobsList","appliedjobslist","getStet","AppliedJobs","AuthenticationControl","authControl","isAuthenticated","handleAuth","location","pathname","startsWith","AdminSignin","class","SigninAdmin","Router","exact","component","App","CandidateList","configstore","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed418313.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport authreducer from './auth';\n\nexport const reducers = combineReducers({\n    auth: authreducer\n})","export default function(state={\n    userdetails:{}   \n}, action){\n    switch(action.type){\n\n        case \"SIGNIN_USER\" : return {\n            userdetails: action.payload,\n        }\n        case \"SIGNUP_USER\": return{\n            userdetails:action.payload,\n        }\n        case \"SIGNOUT\" : return {\n            userdetails:{}\n        }\n        default: \n            return state\n    }\n}","import { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducers } from './index';\n\nconst persistConfig = {\n    key: 'job_portal',\n    storage : storage\n}\n\nconst configPersistReducer = () => {\n    return  persistReducer(persistConfig, reducers);\n}\n\nexport default configPersistReducer();\n\n","import axios from 'axios';\nimport {notification} from 'antd';\n\nconst configureAxios = () => {\n    return axios.create({\n        baseURL: \"http://localhost:4000/api/v1\",\n        timeout: 30000\n    })\n}\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description: desc,\n    });\n  };\n  \nexport const axiosInstance = configureAxios(); \n\n//interceptors for request\naxiosInstance.interceptors.request.use(async config => {\n    import('./../redux/store').then( (persistStore) => {\n        const { store } = persistStore.default;//??\n        let state = store.getState();//??getState\n        if(state.auth.userdetails){//which authuser\n            config.headers.Authorization = `Bearer ${state.auth.userdetails.token}`;\n        }\n    })\n    return await config;\n})\naxiosInstance.interceptors.response.use(response => {\n    return response.data\n}, err=>{\n    const saveError=err.response.data.errors;\n\n    console.log(\"ERROR HANDLED:\",err.response);\n    if(err.response.status==422){\n        openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n\n\n    }\n    else if(err.response.data.code==401){\n\n        openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n    }\n    else{\n        openNotificationWithIcon('error',\"ERROR OCCURED\",saveError);\n\n    }\n   \n       return Promise.reject(err) //what doing????\n\n})\n","import thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport {axiosInstance} from \"./../utilities/configureAxios\";\n\nconst logger = createLogger();\n//how thunk helping\nconst configMiddlewares = () => {\n    const middlewares = [\n        thunk.withExtraArgument({\n            axios: axiosInstance //why ?\n        })\n    ]\n\n    if (process.env.NODE_ENV === \"development\") {  //??\n        middlewares.push(logger); //arr?\n    }\n    \n    return middlewares;//arr return??\n}\n\nexport default configMiddlewares();","import reducers from './reducers/persistReducers';\nimport { compose, applyMiddleware, createStore} from 'redux';\nimport { persistStore } from 'redux-persist';\nimport middlewares from '../middlewares';\n\nconst configureStore = () => {\n\n    const enhancers = compose(applyMiddleware(...middlewares))\n    \n    const store = createStore(\n        reducers,\n        enhancers\n    )\n\n    const persistor =  persistStore(store);\n\n    return { store, persistor}\n}\n\nexport default configureStore();","import { USER_SIGNUP,USER_SIGNIN,FORGET_PASSWORD,RESET_PASSWORD } from './../../constants/APIS';\nimport { browserHistory } from 'react-router'\n\n// import { Signin } from '../../screens/Signin';\n\n\n// export const applyJob = (id) => (dispatch, getState, {axios}) => {//import?\n\n//     let endpoint = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(endpoint, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\n// export const login = (loginData) => (dispatch, getState, {axios}) => {\n\n//     let API = APIS.APPLY_JOB.replace(':jobID', id);\n\n//     return new axios.post(API, null).then( res => {\n//         const { data } = res.data;\n//         dispatch({\n//         type: TYPES.APPLY_JOB\n//         })\n//         return res;\n//     })\n// } \n\nexport const signup=(signupData) => (dispatch, getState, {axios}) =>{\n    return new axios.post(USER_SIGNUP, signupData).then(response=>{\n            let userDetail=response.data;\n            dispatch({\n                type:\"SIGNUP_USER\",\n                payload:userDetail\n            });\n            // if(response.status===200){\n            //     console.log(\"######\",response.data.data);\n            // }\n            // console.log(\"##########\",reponse.data);\n            axios.defaults.headers.common['Authorization'] =`Bearer ${userDetail.token}`;\n\n            return response.data;\n    })\n}\nexport const signin=(signinData) =>(dispatch,getState,{axios})=>{\n    return new axios.post(USER_SIGNIN,signinData).then(response=>{\n        let userDetail=response.data;\n        dispatch({\n            type:\"SIGNIN_USER\",\n            payload:userDetail\n        });\n        axios.defaults.headers.common[\"Authorization\"]= `Bearer ${userDetail.token}`;\n        return response.data;\n    })\n}\n\nexport const forgetpassword=(emailPassed)=>(dispatch,getState,{axios})=>{\n    return new axios.post(FORGET_PASSWORD,{ email: emailPassed.email} ).then(response=>{\n        return response.data;\n    })\n}\n\nexport const resetpassword =(resetData) => (dispatch,getState,{axios})=>{\n    return new axios.post(RESET_PASSWORD,resetData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const signout=()=>(dispatch,getState,{axios}) =>{\n    dispatch({\n        type:\"SIGNOUT\",\n        payload:null\n    });\n    axios.defaults.headers.common[\"Authorization\"]=\"\";\n    return null;\n\n\n}","export const USER_LOGIN = '/signin';\nexport const USER_SIGNUP= '/signup';\nexport const APPLY_JOB = '/jobs/:jobId';\nexport const AVAILABLE_JOBS='/jobs';\nexport const USER_SIGNIN=\"/signin\";\nexport const ALL_CANDIDATES=\"/candidates\";\nexport const DELETE_A_CANDIDATE=\"/candidates/:candidateId\";\nexport const DELETE_A_RECRUITER=\"/recruiters/:recruiterId\";\nexport const ALL_RECRUITERS=\"/recruiters\";\nexport const DELETE_A_JOB=\"/jobs/:jobId\";\nexport const ALL_JOBS=\"/jobs\";\nexport const POST_JOB=\"/jobs\";\nexport const POSTED_JOBS=\"/jobs/posted\";\nexport const GET_CANDIDATE_BY_JOBID=\"/jobs/posted/:jobId\";\nexport const FORGET_PASSWORD=\"/forgetpassword\";\nexport const RESET_PASSWORD=\"/resetpassword\";\nexport const APPLIED_JOBS=\"/applications\";","import React, { Component } from 'react'\nimport { Menu, Icon,Typography, Layout } from 'antd';\nimport { Link } from 'react-router-dom'\nimport {signout} from \"../redux/actions/auth\";\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux'\n\nconst { SubMenu } = Menu;\n\nconst { Title } = Typography;\n\nclass Navbar extends React.Component {\n   \n  state = {\n    current: 'mail',\n    redirect:false,\n    path:\"/signin\"\n  };\n\n\n  handleClick = (e,to) => {\n      if(to==\"/signout\"){\n      e.preventDefault();\n      this.props.signout();\n      this.setState({\n        redirect:true\n      })\n    }else{\n        return;\n    }\n  };\n\n\n\n  render() {\n    if (this.state.redirect) {\n        return <Redirect to='/signin'/>;\n      }\n    \n    const { text , to, history } = this.props;\n\n    \n      if(this.props.userData.auth.userdetails.role==\"0\")\n      {\n          this.state.path=\"/candidate/jobs\";\n      }else if(this.props.userData.auth.userdetails.role==\"1\")\n      {\n        this.state.path=\"/recruiter\";\n      }else if(this.props.userData.auth.userdetails.role==\"2\")\n      {\n        this.state.path=\"/admin\";\n      }\n    \n\n\n    return (\n    //   <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n  \n    <Layout\n        style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '5px 10px'\n        }}\n       >\n\n            <Title level={2}key=\"mail\">\n            <Link to={this.state.path}>Job portal</Link> \n            </Title>\n            <Title level={4} key=\"mail\">\n            <Link onClick={(e) => this.handleClick(e,to)} to={to}>{text}</Link>\n            </Title>\n       </Layout>\n    )\n}\n\n}\n\nconst mapStateToProps=(store)=>{\n  return({\n      userData:store\n  })\n}  \n\n\n\n\nexport default connect(mapStateToProps, { signout })(Navbar);","export const HOME ='/';\nexport const SIGNIN=\"/signin\";\nexport const SIGNUP=\"/signup\";\nexport const SIGNOUT=\"/signout\";\nexport const CANDIDATE_HOME = '/candidate/jobs';\nexport const CALL_CANDIDATE_BY_ADMIN = \"/admin\";\nexport const RECRUITER_HOME=\"/recruiter/jobs\";\nexport const ALL_CANDIDATES=\"/admin/candidates\";\nexport const ALL_RECRUITERS=\"/admin/recruiters\";\nexport const ALL_JOBS=\"/admin/jobs\";\nexport const AVAILABLE_JOBS=\"/candidate/jobs\";\nexport const VIEW_APPLIED_JOBS=\"/candidate/jobs/applications\";\nexport const ADMIN_DASHBOARD=\"/admin\";\nexport const ADMIN_SIGNIN=\"/adminsignin\";\nexport const RESET_PASSWORD=\"/resetpasswordsteps\";\nexport const RECRUITER=\"/recruiter\";\n\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Button,\n    AutoComplete,\n    Icon,\n    Radio,\n  } from 'antd';\n  import Navbar from \"../components/Navbar\";\n  import { signup } from \"./../redux/actions/auth\"\n  import { connect } from 'react-redux'\n  import { AVAILABLE_JOBS,RECRUITER_HOME,SIGNIN } from './../constants/Routes';\n\n  const AutoCompleteOption = AutoComplete.Option;\n  \n  class SignupForm extends React.Component {\n\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          // console.log('Received values of form: ', values);\n          this.props.signup(values).then((data)=>{\n              if(data.role==\"0\"){\n                  this.props.history.push(AVAILABLE_JOBS);\n              }\n              else if(data.role==\"1\"){\n                this.props.history.push(RECRUITER_HOME);\n              }\n        \n          })\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    handleWebsiteChange = value => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({ autoCompleteResult });\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { autoCompleteResult } = this.state;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n   \n      const websiteOptions = autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      ));\n  \n      return (\n        <div >\n          \n        <Navbar text=\"Sign in\" to=\"/signin\"/>\n        <h3 align=\"center\"><span  className=\"h2WrapperSignup\">Sign up for a New Account</span></h3>\n\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"wrapperFormSignup\">\n\n          <Form.Item label=\"E-Mail\">\n            {getFieldDecorator('email', { //check\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>     \n              {/* kdsfkjdsf *********************************************************************************************************/}\n\n          <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n              {\n                min:6,\n                message:\"Password should be minimum of 6 character\"\n            }\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n\n\n          {/* <Form.Item  label={\n              <span>\n                Password&nbsp;\n                <Tooltip title=\"Password must be minimum 6 character long \">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                    min:6,\n                    message:\"Password should be minimum of 6 character\"\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password />)}\n          </Form.Item> */}\n      \n\n\n          <Form.Item\n            label={\n              <span>\n                Name&nbsp;\n                <Tooltip title=\"Please write full name seperated with space - eg. Aman Kumar\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('name', {\n              rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item label=\"Your Profile\">\n            {getFieldDecorator('role',{\n                rules:[{required: true,message: \"Please select your role!\"}]\n            })(\n                <Radio.Group>\n                <Radio.Button value=\"0\">I am a Candidate</Radio.Button>\n                <Radio.Button value=\"1\">I am a Recruiter</Radio.Button>\n                </Radio.Group>,\n            )}\n          </Form.Item>\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign up \n            </Button>\n          </Form.Item>\n        </Form>\n       \n          \n       </div>\n            \n      );\n    }\n  }\n  \n\n  const mapStateToProps = ({auth}) => {\n    return ({\n      userdetails: auth.userdetails\n    })\n   }\n   \n\n\nSignupForm = connect(mapStateToProps, {signup})(SignupForm);\n\n\n\nexport const Signup = Form.create({ name: 'normal_signup' })(SignupForm);\n\n  ","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,notification } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin} from '../redux/actions/auth';\nimport { AVAILABLE_JOBS,CALL_CANDIDATE_BY_ADMIN,RECRUITER } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\nimport {SIGNUP,ADMIN_SIGNIN,SIGNIN,RESET_PASSWORD} from \"../constants/Routes\";\n\nconst openNotificationWithIcon = (type,message,desc) => {\n  notification[type]({\n    message: message,\n    description:desc,\n  });\n};\n\nclass SigninForm extends React.Component {\n\n  \n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n\n          if(response.role==\"0\")\n           this.props.history.push(AVAILABLE_JOBS);\n           if(response.role==\"2\"){\n            this.props.history.push(SIGNIN);\n              openNotificationWithIcon('error',\"ADMIN CAN'T GOT THROUGH THIS ROUTE\");\n           }\n            if(response.role==\"1\")\n            this.props.history.push(RECRUITER);      \n        })\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <Navbar text=\"Sign up\" to={SIGNUP}/>\n      \n          <h3 align=\"center\"><span  className=\"h2WrapperSignup\">Sign in to Existing Account</span></h3>\n\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' },\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n      \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          <br/>\n          \n            Forgot password ? <Link to={RESET_PASSWORD}>Click Here </Link>\n         \n         <br/>\n          OR <b><Link to={SIGNUP}>register now!</Link></b>\n        </Form.Item>\n        <div align=\"center\">\n             <Link to={ADMIN_SIGNIN}><span  className=\"links\"><u>Click for Admin Sign in Window</u></span></Link>\n          </div> \n      </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \nSigninForm = connect(mapStateToProps, {signin}) (SigninForm);\nexport const Signin = Form.create({ name: 'normal_signin' })(SigninForm);","import { AVAILABLE_JOBS, APPLY_JOB,DELETE_A_JOB,ALL_JOBS,POST_JOB,POSTED_JOBS,APPLIED_JOBS } from './../../constants/APIS';\n\nexport const availablejobs= (meta) => (dispatch,getState,{axios})=>{\n    return new axios.get(AVAILABLE_JOBS,{ params: meta} ).then(response=>{\n        return response;//changed .data\n    })\n}\n\nexport const applyForJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let APPLY=APPLY_JOB.replace(\":jobId\", jobId);\n    return new axios.post(APPLY).then(response=>{\n        return response;\n    })\n}\n\nexport const deleteJob=(jobId)=>(dispatch,getState,{axios})=>{\n    let DEL_JOB=DELETE_A_JOB.replace(\":jobId\",jobId);\n    return new axios.delete(DEL_JOB).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobs=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_JOBS,{params:meta}).then(response=>{\n        return response;\n    }) \n}\n\nexport const postJob=(jobData)=>(dispatch,getState,{axios})=>{\n    return new axios.post(POST_JOB,jobData).then(response=>{\n        return response.data;\n    })\n}\n\nexport const allJobsByRecruiter=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(POSTED_JOBS,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\n\nexport const appliedjobslist=(meta)=>(dispatch,getStet,{axios})=>{\n    return new axios.get(APPLIED_JOBS,{params:meta}).then(response=>{\n        return response;\n    })\n}","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nIcon,\nPopconfirm,\nSpin} from 'antd';\nimport {applyForJob, availablejobs,deleteJob,allJobs} from \"../redux/actions/jobs\";\nimport { connect } from 'react-redux';\n\nclass JobsView extends Component {\n\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        total: 0,\n        loading: false,\n        textPop:\"Want to apply to this job?\"\n    }\n\ncomponentDidMount() {\n    this.setState({\n        loading : true\n    })\n    if(this.props.userData.auth.userdetails.role==\"0\"){\n       const pagination={\n            page: this.state.page,//no prob i this.state\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n\n                total:response.metadata.count,\n                list:response.data,\n                loading: false\n            });\n        })\n    }else{\n        const pagination={\n            page: this.state.page,//no prob i this.state\n            limit:this.state.limit\n        }\n\n        this.props.allJobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list: response.data,\n                loading: false\n            })\n        });\n    }\n}\n\n\n    applyToJob=(e,jobUuid)=>{\n        // console.log(\"APPLY TO JOB \",jobUuid);\n        e.preventDefault();\n\n        let jobDetails= this.props.applyForJob(jobUuid).then(data=>{\n            const updatedJobs = this.state.list.map(job=>{\n                return job.id === jobUuid ? \n                {\n                  ...job, isApplied: true\n                } : \n                job\n            })\n            this.setState({\n                list: updatedJobs\n            })\n        });\n\n    }\n\n    delJob=(e,jobUuid,isDisabled)=>{\n        e.preventDefault();\n                let jobDetails=this.props.deleteJob(jobUuid).then(data=>{\n                    const updatedJobs=this.state.list.map(job=>{\n                        return job.id===jobUuid ?\n                        {\n                            ...job, isApplied:true\n                        }:\n                        job\n                    })\n                    this.setState({\n                        list:updatedJobs\n                    })\n                })\n    }\n\n    //PAGINATE HERE.....\n    onChange = page => {\n        const pagination={\n            page: page,\n            limit:this.state.limit\n        }\n        this.props.availablejobs(pagination).then(response=>{\n            this.setState({//set state will render the view again..\n                total:response.metadata.count,\n                list:response.data\n            });\n        })\n      };\n\n    \n    render() {\n\n\n        const { list, loading } = this.state;\n\n        if(loading) {\n            return  <center><Spin /></center> \n        }\n        if(list.length<1){\n            return(\n                <h2><center>No Jobs Published So far...</center></h2>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF JOBS</h2>\n                {\n                this.props.userData.auth.userdetails.role==\"0\" ? (\n                    list.map(item=>{\n                        return ( ///FFINEE-----------------------------------------\n                            <div className=\"cards\">\n                             <Card title={item.job_title}><p>{item.job_description}</p>\n                             <Popconfirm placement=\"right\" title={this.state.textPop} disabled={item.isApplied} onConfirm={(e) => this.applyToJob(e,item.id)}  okText=\"Yes\" cancelText=\"No\">\n                             <Button type=\"primary\"  disabled={item.isApplied}>Apply</Button>\n                             </Popconfirm>\n\n                             </Card>\n                            </div>\n                          ) \n                })) : \n                list.map(item=>{\n                    return (\n                        <div className=\"cards\">\n                            <Card title={item.job_title}>\n                            <p>{item.job_description}</p>\n                             <Button type=\"danger\" onClick={(e) => this.delJob(e,item.id,item.isApplied)} disabled={item.isApplied}>Delete</Button>\n                             </Card>\n                      </div>\n                    ) \n                })\n                }\n            <Pagination className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n            </React.Fragment>  \n        )}\n}\n        \nconst mapStateToProps=(store)=>{\n   return({\n       userData:store\n   })\n}  \n\n\n\nexport default connect(mapStateToProps, {applyForJob, availablejobs, allJobs, deleteJob}) (JobsView);//take then send\n\n","import React, { Component } from 'react'\nimport {\n  Form,\n} from 'antd';\n\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {availablejobs} from \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport JobsView from '../components/JobsView'\nimport {SIGNOUT,VIEW_APPLIED_JOBS} from \"../constants/Routes\";\n\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n    current:1\n  };\n\n  onChange = page => {\n    this.setState({\n      current: page,\n\n    });\n  };\n\n  render() {\n    const { availablejobs } = this.props; \n    return (\n      <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          <div align=\"left\">\n             <Link to={VIEW_APPLIED_JOBS}><span  className=\"links\"><u>View Applied Jobs</u></span></Link>\n          </div> \n          <div className=\"listCards\" >\n            <JobsView  availablejobs={availablejobs}/>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{ \n  return{\n    userData:state\n  }\n}\n\nCandidateHome=connect(mapStateToProps,{availablejobs})(CandidateHome);\nexport const CandidateJobs = Form.create({ name: 'candidateJobs' })(CandidateHome);\n\n","import React, { Component } from 'react';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport { Card, CardDeck,  } from 'react-bootstrap';\nimport {ALL_CANDIDATES,ALL_RECRUITERS,ALL_JOBS,SIGNOUT} from \"../constants/Routes\";\n\nexport default class AdminHome extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <CardDeck>\n  <Card>\n    <Card.Body><Link to={ALL_CANDIDATES}>\n      <Card.Title>Candidates</Card.Title></Link>\n      <Card.Text>\n         All candidates with their email and Id's are listed. Manage Candidates here.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n  <Card>\n    <Card.Body><Link to={ALL_RECRUITERS}>\n      <Card.Title>Recruiters</Card.Title></Link>\n      <Card.Text>\n         All Recruiters with their email and Id's are listed. Manage Recruiters here.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n  <Card>\n    <Card.Body><Link to={ALL_JOBS}>\n      <Card.Title>Jobs Available</Card.Title></Link>\n      <Card.Text>\n        Here you can manage the jobs posted by Recruiters. Click on Jobs above to view.\n      </Card.Text>\n    </Card.Body>\n    {/* <Card.Footer>\n      <small className=\"text-muted\">Last updated 3 mins ago</small>\n    </Card.Footer> */}\n  </Card>\n</CardDeck>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nSpin} from 'antd';\nimport { connect } from 'react-redux';\nimport {candidateDelete} from '../redux/actions/candidates';\nimport {allCandidates} from \"../redux/actions/candidates\";\n\n\nclass CandidatesList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n\n    this.props.allCandidates(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\ndeleteCandidate=(e,candidateUuid)=>{\n        \n        e.preventDefault();\n\n        let candidateDetail= this.props.candidateDelete(candidateUuid).then(data=>{\n            const updatedCandidates = this.state.list.map(candidate=>{\n                return candidate.id === candidateUuid ? \n                {\n                    ...candidate, isApplied: true\n                } : \n                candidate\n            })\n            this.setState({\n                list: updatedCandidates\n            })\n        });\n    }\n\n     \n \nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allCandidates(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n   \n\n\n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h2><center>No candidates to Show currently...</center></h2>\n            )\n        }\n        return (\n            \n            <React.Fragment>\n                <h2 align=\"center\">LIST OF CANDIDATES</h2>\n\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.email}><p>Name:{candidate.name}<br/>ID:{candidate.id}</p>\n                     <Button type=\"danger\" onClick={(e) =>  this.deleteCandidate(e,candidate.id)} disabled={candidate.isApplied}>Delete</Button>\n                     </Card>\n              </div>\n                ) \n                })\n            }\n            <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default connect(null, {candidateDelete, allCandidates}) (CandidatesList);//take then send\n\n","import { ALL_CANDIDATES,DELETE_A_CANDIDATE,GET_CANDIDATE_BY_JOBID } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allCandidates=(meta) => (dispatch,getState,{axios})=>{\n    return new axios.get(ALL_CANDIDATES,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\nexport const candidateDelete=(candidateUuid)=> (dispatch,getState,{axios})=>{\n    let DEL_CANDI=DELETE_A_CANDIDATE.replace(\":candidateId\", candidateUuid);\n\n    return new axios.delete(DEL_CANDI).then(response=>{\n        return response.data;\n    })\n}\n\n\nexport const getAppliedCandidates=(jobId,meta)=>(dispatch,getState,{axios})=>{\n    let JOB_ID=GET_CANDIDATE_BY_JOBID.replace(\":jobId\",jobId);\n\n    return new axios.get(JOB_ID,{ params: meta}).then(response=>{\n        return response;\n    })\n}","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport CandidateList from '../components/CandidatesList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\nclass CandidateHome extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  render() {\n\n    const { allCandidates } = this.props; \n    return (\n    <div>\n        <div>\n            <Navbar text=\"Logout\" to={SIGNOUT}/>\n        </div>\n        <div align=\"left\" className=\"linksDivLeft\">\n            <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n        </div> \n        <div className=\"listCards\">\n      <CandidateList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(CandidateHome);","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nSpin\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {recruiterDelete,allRecruiters} from \"../redux/actions/recruiters\";\n\n\nclass RecruiterList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        this.setState({//check what coming inside list\n              total:response.metadata.count,\n              list:response.data,\n              loading:false\n        })\n    })\n}\n   \nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allRecruiters(pagination).then(response=>{\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n\ndeleteRecruiter=(e,recruiterUuid)=>{//uuid kahan se ayegi jispe click hoga\n    e.preventDefault();\n    let recruiterDetails=this.props.recruiterDelete(recruiterUuid).then(data=>{\n        const updatedRecruiters = this.state.list.map(recruiter=>{\n            return recruiter.id===recruiterUuid ?\n            {\n                ...recruiter,isApplied:true //only isApplied replace rest same.\n            }:\n            recruiter\n        });\n        this.setState({\n            list:updatedRecruiters\n        })\n    })\n}\n\n\n    render(){\n        const {list,loading}=this.state //got list form inside current state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h2><center>No Recruiters present...</center></h2>\n            )\n        }\n        return(\n            <React.Fragment>\n                <h2 align=\"center\">LIST OF RECRUITERS</h2>\n            {\n            list.map(recruiter=>{\n                return(\n                    <div className=\"cards\">\n                    <Card title={recruiter.email}><p>{recruiter.name}<br/>ID:{recruiter.id}</p>\n                    <Button type=\"danger\" onClick={(e) => this.deleteRecruiter(e,recruiter.id)} disabled={recruiter.isApplied}>Delete</Button>\n                    </Card>           \n                 </div>\n                )\n\n            })\n        }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n    }  \n}\n\n\nexport default connect(null,{allRecruiters,recruiterDelete})(RecruiterList);\n\n","import { ALL_RECRUITERS,DELETE_A_RECRUITER } from './../../constants/APIS';\n// import { browserHistory } from 'react-router'\n\nexport const allRecruiters=(meta)=>(dispatch,getState,{axios})=>{\n    return new axios.get(ALL_RECRUITERS,{params:meta}).then(response=>{\n        return response;\n    })\n}\n\nexport const recruiterDelete=(recruiterUuid)=>(dispatch,getState,{axios})=>{\n    let DEL_RECRUITER=DELETE_A_RECRUITER.replace(\":recruiterId\",recruiterUuid);\n   \n    return axios.delete(DEL_RECRUITER).then(response=>{\n        return response.data;\n    })\n}\n\n\n\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport RecruiterList from '../components/RecruiterList';\nimport {SIGNOUT} from \"../constants/Routes\";\n\n class RecruiterHome extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <div>\n                  <Navbar text=\"Logout\" to={SIGNOUT}/>\n                </div>\n                <div align=\"left\" className=\"linksDivLeft\">\n                  <Link to=\"/admin\"><span  className=\"links\"><u>Dashboard</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                  <RecruiterList />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(RecruiterHome);\n\n\n\n","import React, { Component } from \"react\";\nimport Navbar from \"./../components/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport JobsList from \"../components/JobsView\";\nimport {SIGNOUT,ADMIN_DASHBOARD} from \"../constants/Routes\";\n\nclass JobHome extends Component {\n\tstate = {\n\t\tinitLoading: false,\n\t\tloading: false,\n\t\tdata: []\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar text=\"Logout\" to={SIGNOUT}/>\n\t\t\t\t</div>\n\t\t\t\t<div align=\"left\" className=\"linksDivLeft\">\n\t\t\t\t\t<Link to={ADMIN_DASHBOARD}>\n\t\t\t\t\t\t<span className=\"links\">\n\t\t\t\t\t\t\t<u>Dashboard</u>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</div >\n                <div className=\"listCards\">\n                    <JobsList />\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tcandidateData: state\n\t};\n};\n\nexport default connect(mapStateToProps)(JobHome);\n","import React, { Component } from 'react'\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\nimport { \n  Form,\n    Input,\n    Button,\n    Icon,\n   } from 'antd';\nimport {postJob} from  \"../redux/actions/jobs\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router';\n\nconst { TextArea } = Input;\n\nclass RecruiterHome extends React.Component {\n  state={\n    redirect:false\n  }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n              this.props.postJob(values).then(response=>{\n                this.setState({\n                  redirect:true\n                })\n              });\n          }\n        });\n      };\n    \n      render() {\n        if (this.state.redirect) {\n          return <Redirect to='/recruiter/jobs'/>;\n        }\n        const { getFieldDecorator } = this.props.form;\n        return (\n          <div>\n          <div>\n          <Navbar text=\"Logout\" to={SIGNOUT}/>\n          </div>\n          <div align=\"left\">\n            <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Your Published Jobs!</u></span></Link>\n          </div> \n          <div className=\"wrapperForm\">\n          <Form  onSubmit={this.handleSubmit} className=\"login-form\">\n            <h2><strong>Publish New Job</strong></h2>\n            <Form.Item>\n              {getFieldDecorator('title', {\n                rules: [{ required: true, message: 'Please mention title of Job!' }],\n              })(\n                <Input\n                  prefix={<Icon type=\"tag\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Job Title\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('description', {\n                rules: [{ required: true, message: 'Please mention description of job!' }],\n              })(\n                <TextArea rows={4}\n                  prefix={<Icon type=\"form\" style={{ color: 'rgba(0,0,0,.25)' }}\n                  rows={4} />}\n                  \n                  placeholder=\"Job Description\"\n                />,\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Publish Job\n              </Button>\n            </Form.Item>\n          </Form>\n          </div>\n          </div>\n        );\n      }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    userData:state\n  }\n}\n\n\nRecruiterHome=connect(mapStateToProps,{postJob})(RecruiterHome);\n\nexport const RecruiterPostJobs = Form.create({ name: 'candidateJobs' })(RecruiterHome);\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nPagination,\nSpin\n} from 'antd';\nimport { connect } from 'react-redux';\nimport {allJobsByRecruiter} from \"../redux/actions/jobs\";\nimport { Link } from 'react-router-dom'\n\n\n\n\n\n\nclass PostedJobList extends Component {\n\n    state = {\n        list: [],\n        isApplied:false,\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        this.setState({//check what coming inside list\n            total:response.metadata.count,\n            list:response.data,\n            loading:false\n        })\n    })\n}\n\nonChange = page => {\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.allJobsByRecruiter(pagination).then(response=>{\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n   \n\n\n\n    render(){\n        const {list,loading}=this.state //got list form inside current state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>No Jobs Published!</center></h3>\n            )\n        }\n        return(\n\n            <React.Fragment>\n            {\n           \n                list.map(jobs=>{\n                let linkto=\"/recruiter/jobs/\"+jobs.id;\n                return(\n\n                    <div className=\"cards\">\n                    <Card title={jobs.job_title}><p>{jobs.job_description}</p>\n                    <Link to={linkto}>View Applications</Link>\n                    </Card>\n              </div>\n                )\n            })\n            }\n            <Pagination className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n            </React.Fragment>\n        )\n    }  \n}\n\n\n\nexport default connect(null,{allJobsByRecruiter})(PostedJobList);\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport PostedJobList from \"../components/JobsByRecruiter\"\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\n\n class PostedJobs extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to=\"/signout\"/>\n                <div align=\"left\">\n                    <Link to=\"/recruiter\"><span  className=\"links\"><u>Post a Job !!</u></span></Link>\n                </div> \n                <div className=\"listCards\">\n                <h2><center>Your Posted Jobs Will Appear Here</center></h2>\n                    <PostedJobList />\n                </div>     \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(PostedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nSpin,\nPagination} from 'antd';\nimport { connect } from 'react-redux';\nimport {getAppliedCandidates} from \"../redux/actions/candidates\";\n\n\nclass ApplicantList extends Component {\n\n    state = {\n        list: [],\n        page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        \n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.getAppliedCandidates(this.props.jobId,pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n    \n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n                <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>No Applications Received</center></h3>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n                list.map(candidate=>{\n                return (\n                    <div className=\"cards\">\n                    <Card title={candidate.email}>Name:{candidate.name}<br/>ID :{candidate.id}</Card>\n                   </div>\n                ) \n                })\n            }\n             <Pagination onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>   \n             </React.Fragment>\n        )\n\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return ({\n        userData:state\n    })\n}\n\nexport default connect(mapStateToProps, {getAppliedCandidates}) (ApplicantList);//take then send\n\n","import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport ApplicantsList from \"../components/ApplicantList.jsx\";\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT} from \"../constants/Routes\";\n\n\n class ApplicantsForJob extends Component {\n    state = {\n        initLoading: false,\n        loading: false,\n        data: [],\n      };\n\n    render() {\n        return (\n            <div>\n                <Navbar text=\"Logout\" to={SIGNOUT}/>\n                <div align=\"left\" className=\"linksDivLeft\">\n                    <Link to=\"/recruiter/jobs\"><span  className=\"links\"><u>View Published Jobs</u></span></Link>\n                </div> \n                <div align=\"right\" className=\"linksDivRight\">\n                    <Link to=\"/recruiter\"><span  className=\"linksRight\"><u>Post New Job</u></span></Link>\n                </div> \n                  <ApplicantsList jobId={this.props.match.params.jobId}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n      candidateData:state\n    }\n  }\n\n  export default  connect(mapStateToProps)(ApplicantsForJob);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport {CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\n\n\nclass ForgetPassword extends React.Component {\n  handleSubmit = e => {\n    \n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n          this.props.forgetpassword(values);\n      }else{\n          const temp=\"ERROR OCCURED\"+err;\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'E-Mail is needed to Reset password!' },\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n      \n        <Form.Item>\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ForgetPass = Form.create({ name: 'normal_signin' })(ForgetPassword);\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button,Tooltip,InputNumber, Checkbox } from 'antd';\nimport { connect } from 'react-redux'\nimport {resetpassword} from '../redux/actions/auth';\n\nclass ResetPassword extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) { \n        this.props.resetpassword(values);    \n\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item label={\n              <span>\n                Your E-mail\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item  label={\n              <span>\n                New Password&nbsp;\n                <Tooltip title=\"Password must be minimum 6 character long \">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                    min:6,\n                    message:\"Password should be minimum of 6 character\"\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password />)}\n          </Form.Item>\n          \n        <Form.Item  label={\n              <span>\n                OTP&nbsp;\n                <Tooltip title=\"OTP has been shared to your account\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            } hasFeedback>\n          {getFieldDecorator('otp', {\n            rules: [{ required: true, message: 'OTP will be 6 digit code sent to your account' },\n                {\n                    min:6,\n                    message:\"OTP too short\"\n                },\n                {\n                    max:6,\n                    message:\"OTP too long\"\n                }\n        ],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"otp\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const ResetPass=Form.create({name:\"reset_form\"})(ResetPassword);","import React, { Component } from 'react'\n\nimport { Steps, Button, message, notification, Spin } from 'antd';\nimport  {ForgetPass as ForgetPassword} from './ForgetPassword';\nimport {forgetpassword} from '../redux/actions/auth';\nimport { connect } from 'react-redux'\nimport {ResetPass} from './ResetPassword';\nimport {resetpassword} from '../redux/actions/auth';\nimport Navbar from \"../components/Navbar\";\nimport {SIGNUP,HOME} from \"../constants/Routes\";\n\n\nconst { Step } = Steps;\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n      message: message,\n      description:desc,\n    });\n  };\n\nclass ForgetPassSteps extends React.Component {\n  \n  state = {\n    current: 0,\n    loading: false\n  }\n\n  next() {\n    const current = this.state.current + 1;\n    this.setState({ current, loading: false });\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current, loading: false });\n  }\n\n    handleResetRequest = (values) => {\n      this.setState({\n          loading: true\n      })\n      this.props.forgetpassword(values).then(response=>{\n          this.next();\n      }).catch(err=>{\n        openNotificationWithIcon('error',\"Check Email\",\"E-Mail you entered doesn't exists!\")\n        this.setState({\n            loading : false\n        })\n      })\n  }\n\n  handleFinalResetRequest =(values)=>{\n      this.props.resetpassword(values).then(response=>{\n          message.success('Password Changed Successfully')\n          this.props.history.push(HOME);\n      }).catch(err=>{\n            openNotificationWithIcon('error',err.response.data.errors[0].message);\n          \n      })\n  }\n\n  steps = [\n    {\n      title: 'ForgotPassword',\n      content: <ForgetPassword loading={this.state.loa} forgetpassword={this.handleResetRequest}/>,\n    },\n    {\n      title: 'ResetPassword',\n      content: <ResetPass resetpassword={this.handleFinalResetRequest} />,\n    },\n  ];\n\n  render() {\n    const { current, loading } = this.state;\n    return (\n        <div>\n         <Navbar text=\"Signup\" to={SIGNUP}/>\n\n      <div className=\"wrapperForgetPass\">\n        <Steps current={current}>\n          {this.steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps> \n\n        <div className=\"steps-content\">{loading ? <span className=\"spin\"><Spin /></span> : this.steps[current].content}</div>\n        <div className=\"steps-action\" align=\"right\">\n          {current < this.steps.length - 1 && (\n          <Button type=\"default\" onClick={() => this.next()}>\n            Aready Have An OTP?\n            </Button>\n          )}\n\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n              Send OTP AGAIN\n            </Button>\n          )}\n        </div>\n      </div>\n      </div>\n\n    );\n  }\n}\nexport const ForgetPassStep=connect(null ,{\n    forgetpassword,resetpassword\n})(ForgetPassSteps);","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nSpin} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\n\n\nclass AppliedJobsList extends Component {\n\n    state = {\n        list: [],\n         page:1,\n        limit:6,\n        loading:true\n    }\n\ncomponentDidMount() {\n    const pagination={\n        page: this.state.page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n\n        this.setState({//set state will render the view again..\n        total:response.metadata.count,\n        list:response.data,\n        loading:false\n        })\n    })\n}\n\n\nonChange = page => {\n    console.log(\"PAGE CLICKED ::::\",page);\n    const pagination={\n        page: page,\n        limit:this.state.limit\n    }\n    this.props.appliedjobslist(pagination).then(response=>{\n        console.log(\"$$$$$$$$$$$$\",response);\n        this.setState({//set state will render the view again..\n            total:response.metadata.count,\n            list:response.data\n        });\n    })\n  };\n\n        \n\n    render() {\n        const { list,loading } = this.state\n        if(loading){\n            return(\n           <center><Spin /></center>\n            )\n        }\n        if(list.length<1){\n            return(\n                <h3><center>You have not applied to any Job !!</center></h3>\n            )\n        }\n        return (\n            <React.Fragment>\n            {\n            list.map(jobs=>{\n              return (\n                <div className=\"cards\">\n                <Card title={jobs.job_title}>{jobs.job_description}<br/>ID :{jobs.id}</Card>\n               </div>\n              ) \n            })\n        }\n        <Pagination  className=\"paginationblock\" onChange={this.onChange} total={this.state.total} pageSize={this.state.limit}/>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default connect(null, {appliedjobslist}) (AppliedJobsList);//take then send","import React, { Component } from 'react'\n\nimport {connect} from \"react-redux\";\nimport AppliedJobsList from '../components/AppliedJobsList';\nimport Navbar from './../components/Navbar';\nimport { Link } from 'react-router-dom'\nimport {SIGNOUT,AVAILABLE_JOBS} from \"../constants/Routes\";\n\nclass AppliedJobs extends React.Component {\n  state = {\n    initLoading: false,\n    loading: false,\n    data: [],\n  };\n\n  \n  render() {\n\n    const { allCandidates } = this.props; //took out function and passed\n    return (\n    <div>\n      <div>\n        <Navbar text=\"Logout\" to={SIGNOUT}/>\n     </div>\n     <div align=\"left\">\n        <Link to={AVAILABLE_JOBS}><span  className=\"links\"><u>View Available Jobs</u></span></Link>\n    </div > \n    <div className=\"listCards\">\n       <h2><center>Your Applied Jobs</center></h2>\n      <AppliedJobsList allCandidates={allCandidates}/>\n      </div>\n    </div>\n    )\n  }\n}\nconst mapStateToProps=state=>{\n  return{\n    candidateData:state\n  }\n}\n\nexport default connect(mapStateToProps)(AppliedJobs);\n\n\n\n","import React, { Component } from 'react'\nimport { Card,\nButton,\nIcon,\nPagination,\nnotification} from 'antd';\nimport { connect } from 'react-redux';\nimport {appliedjobslist} from \"../redux/actions/jobs\";\nimport {HOME} from \"../constants/Routes\";\nexport function AuthenticationControl (Component){\n\nconst openNotificationWithIcon = (type,message,desc) => {\n    notification[type]({\n        message: message,\n        description:desc,\n    });\n    };\n    \n    \n\n    class authControl extends React.Component{\n\n        componentDidMount() {\n            this.handleAuth();\n        }\n        state={\n            isAuthenticated:true\n        }\n\n        handleAuth = () => {\n                const {history}=this.props;\n                const {role}=this.props.userData.auth.userdetails;\n                if(this.props.location.pathname.startsWith(\"/admin\")&&(role != \"2\")){\n                    console.log(\"ROle\",this.props.location.pathname.startsWith(\"/admin\"));\n                    history.push(\"/adminsignin\");\n                    console.log(this.props.location)\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/candidate\")&& role!=\"0\"){\n                    history.push(HOME);\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n                }\n                else if(this.props.location.pathname.startsWith(\"/recruiter\")&& role!=\"1\"){\n                    history.push(\"/signin\");\n                    openNotificationWithIcon('error',\"Not authorized to Access this route\");\n\n                    this.state.isAuthenticated=false;\n\n                }\n            }\n            // role= 0, /admin <Login> : path\n\n\n\n        render(){\n           return(\n           <div>\n           \n            { \n            this.state.isAuthenticated==true ?\n                <Component {...this.props}/> //which props?\n                : null  //render nothing\n            }\n\n            </div>\n           )\n        }\n\n    }\n    const mapStateToProps=(store)=>{\n        return({\n            userData:store\n        })\n    }\n    \n    return connect(mapStateToProps,{})(authControl);\n}\n\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport { connect } from 'react-redux'\nimport {signin} from '../redux/actions/auth';\nimport { CALL_CANDIDATE_BY_ADMIN } from '../constants/Routes';\nimport Navbar from \"../components/Navbar\";\nimport { Link } from 'react-router-dom'\n\n\nclass AdminSignin extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.signin(values).then(response=>{\n         \n           if(response.role==\"2\")\n            this.props.history.push(\"/admin\");\n        \n            \n        })\n        \n\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <Navbar text=\"Not An Admin?\" to=\"/signin\"/>\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" className=\"wrapperForm\">\n          <h2><span class=\"adminh2\">ADMIN</span> SIGNIN WINDOW</h2>\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"E-mail\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {/* {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox>Remember me</Checkbox>)} */}\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          \n        </Form.Item>\n      </Form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({auth}) => {\n  return ({\n    userdetails: auth.userdetails\n  })\n }\n \n\n\n AdminSignin = connect(mapStateToProps, {signin}) (AdminSignin);//take then send\nexport const SigninAdmin = Form.create({ name: 'normal_signin' })(AdminSignin);\n\n// ReactDOM.render(<Signin />, mountNode);\n","import React, { Component } from 'react'\nimport { BrowserRouter as AppRouter, Route } from 'react-router-dom';\nimport App from './App';\nimport { Signup } from './screens/Signup';\nimport { Signin } from './screens/Signin';\nimport {CandidateJobs}  from './screens/CandidateHome'\nimport AdminHome from './screens/AdminHome'\nimport CandidateList from './screens/CandidateList'\nimport RecruiterList from \"./screens/RecruiterList\"\nimport JobHome from \"./screens/JobsList\"\nimport {RecruiterPostJobs} from \"./screens/RecruiterHome\";\nimport PostedJobs from \"./screens/PostedJobs\";\nimport ApplicantsForJob from \"./screens/ApplicantsToJob\"\nimport {ForgetPass} from \"./screens/ForgetPassword\";\nimport {ResetPass} from \"./screens/ResetPassword\";\nimport {ForgetPassStep} from \"./screens/ForgetPassSteps\";\nimport AppliedJobs from \"./screens/AppliedJobs\";\nimport {AuthenticationControl} from \"./components/AuthenticationControl\";\nimport {SigninAdmin} from \"./screens/AdminSignin\";\nexport const Router = () => (\n    <AppRouter>\n        <Route exact path=\"/\"           component={Signin} />\n        <Route path=\"/signup\"           component={Signup} />\n        <Route path=\"/dashboard\"        component={App} />\n        <Route exact  path =\"/candidate/jobs\" component={AuthenticationControl(CandidateJobs)}/>\n        <Route path =\"/admin/candidates/\"   component={AuthenticationControl(CandidateList)} />\n        <Route path =\"/admin/recruiters/\"   component={AuthenticationControl(RecruiterList)} />\n        <Route path=\"/admin/jobs\" component={AuthenticationControl(JobHome)} />\n        <Route exact path='/admin' component={AuthenticationControl(AdminHome)} />\n        <Route exact path =\"/recruiter\" component={AuthenticationControl(RecruiterPostJobs)}  />\n        <Route exact path=\"/recruiter/jobs\" component={AuthenticationControl(PostedJobs)} />\n        <Route  path=\"/recruiter/jobs/:jobId\" component={AuthenticationControl(ApplicantsForJob)} />\n        <Route path=\"/forgetpassword\" component={ForgetPass} />\n        <Route path=\"/resetpassword\" component={ResetPass} />\n        <Route exact  path=\"/signin\" component={Signin} />\n        <Route path=\"/resetpasswordsteps\" component={ForgetPassStep} />\n        <Route path=\"/candidate/jobs/applications\" component={AuthenticationControl(AppliedJobs)} />\n        <Route path=\"/adminsignin\" component={SigninAdmin}/>\n\n    </AppRouter>\n)","import React from 'react';\nimport './App.css';\nimport { Router } from './Router';\nimport { Provider } from 'react-redux';\nimport configstore from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { store, persistor } = configstore;\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router />\n      </PersistGate>  \n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n// import { Router }  from './Router';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}